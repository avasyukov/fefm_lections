<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="838.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="821" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="821" > </text>
<g id="frames">
<g >
<title>vectorSquareNorm@plt (5 samples, 0.03%)</title><rect x="889.3" y="581" width="0.4" height="15.0" fill="rgb(249,158,33)" rx="2" ry="2" />
<text  x="892.29" y="591.5" ></text>
</g>
<g >
<title>clear_rec (41 samples, 0.27%)</title><rect x="147.9" y="437" width="3.2" height="15.0" fill="rgb(209,147,39)" rx="2" ry="2" />
<text  x="150.94" y="447.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNode@plt (40 samples, 0.26%)</title><rect x="420.8" y="565" width="3.0" height="15.0" fill="rgb(212,192,15)" rx="2" ry="2" />
<text  x="423.75" y="575.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned char, std::less&lt;unsigned char&gt;, std::allocator&lt;unsigned char&gt; &gt;::insert (6 samples, 0.04%)</title><rect x="39.0" y="341" width="0.4" height="15.0" fill="rgb(227,51,24)" rx="2" ry="2" />
<text  x="41.97" y="351.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isBorder (2 samples, 0.01%)</title><rect x="286.3" y="597" width="0.1" height="15.0" fill="rgb(242,11,16)" rx="2" ry="2" />
<text  x="289.26" y="607.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::checkCharactCache (3,877 samples, 25.18%)</title><rect x="424.2" y="565" width="297.1" height="15.0" fill="rgb(231,193,35)" rx="2" ry="2" />
<text  x="427.20" y="575.5" >gcm::TetrMeshFirstOrder::checkCharactCa..</text>
</g>
<g >
<title>[unknown] (15,144 samples, 98.35%)</title><rect x="10.1" y="757" width="1160.5" height="15.0" fill="rgb(209,123,18)" rx="2" ry="2" />
<text  x="13.08" y="767.5" >[unknown]</text>
</g>
<g >
<title>pqdownheap (8 samples, 0.05%)</title><rect x="84.0" y="53" width="0.6" height="15.0" fill="rgb(206,223,20)" rx="2" ry="2" />
<text  x="86.95" y="63.5" ></text>
</g>
<g >
<title>vtkAlgorithm::Update (612 samples, 3.97%)</title><rect x="39.0" y="613" width="46.9" height="15.0" fill="rgb(212,56,53)" rx="2" ry="2" />
<text  x="41.97" y="623.5" >vtkA..</text>
</g>
<g >
<title>vtkCompositeDataPipeline::ExecuteData (282 samples, 1.83%)</title><rect x="12.3" y="501" width="21.6" height="15.0" fill="rgb(217,218,25)" rx="2" ry="2" />
<text  x="15.30" y="511.5" >v..</text>
</g>
<g >
<title>vtkCellArray_detail::InsertNextCellImpl::operator (5 samples, 0.03%)</title><rect x="38.4" y="549" width="0.4" height="15.0" fill="rgb(219,140,51)" rx="2" ry="2" />
<text  x="41.43" y="559.5" ></text>
</g>
<g >
<title>vtkDataArrayPrivate::DoComputeScalarRange&lt;vtkAOSDataArrayTemplate&lt;int&gt;, double, vtkDataArrayPrivate::AllValues&gt; (3 samples, 0.02%)</title><rect x="16.2" y="213" width="0.2" height="15.0" fill="rgb(227,49,22)" rx="2" ry="2" />
<text  x="19.21" y="223.5" ></text>
</g>
<g >
<title>gcm::TetrMeshSecondOrder::belongsToTetr (3 samples, 0.02%)</title><rect x="722.3" y="565" width="0.2" height="15.0" fill="rgb(248,11,43)" rx="2" ry="2" />
<text  x="725.31" y="575.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNode (57 samples, 0.37%)</title><rect x="1147.4" y="645" width="4.4" height="15.0" fill="rgb(249,45,35)" rx="2" ry="2" />
<text  x="1150.39" y="655.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNode (16 samples, 0.10%)</title><rect x="193.6" y="645" width="1.2" height="15.0" fill="rgb(221,229,44)" rx="2" ry="2" />
<text  x="196.61" y="655.5" ></text>
</g>
<g >
<title>vtkSMPTools::For&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;double&gt;, double&gt; &gt; (5 samples, 0.03%)</title><rect x="16.4" y="197" width="0.4" height="15.0" fill="rgb(210,146,37)" rx="2" ry="2" />
<text  x="19.44" y="207.5" ></text>
</g>
<g >
<title>vtkAlgorithm::Update (282 samples, 1.83%)</title><rect x="12.3" y="597" width="21.6" height="15.0" fill="rgb(210,187,12)" rx="2" ry="2" />
<text  x="15.30" y="607.5" >v..</text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::findOwnerTetr (2 samples, 0.01%)</title><rect x="321.1" y="597" width="0.2" height="15.0" fill="rgb(236,0,35)" rx="2" ry="2" />
<text  x="324.13" y="607.5" ></text>
</g>
<g >
<title>gcm::VTKSnapshotWriter::dumpMeshSpecificData (48 samples, 0.31%)</title><rect x="35.2" y="629" width="3.7" height="15.0" fill="rgb(250,54,6)" rx="2" ry="2" />
<text  x="38.21" y="639.5" ></text>
</g>
<g >
<title>kd_clear (179 samples, 1.16%)</title><rect x="137.4" y="613" width="13.8" height="15.0" fill="rgb(206,93,32)" rx="2" ry="2" />
<text  x="140.44" y="623.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getL (50 samples, 0.32%)</title><rect x="128.2" y="613" width="3.9" height="15.0" fill="rgb(218,111,52)" rx="2" ry="2" />
<text  x="131.25" y="623.5" ></text>
</g>
<g >
<title>gcm::CalcNode::getMaterial (6 samples, 0.04%)</title><rect x="92.4" y="613" width="0.4" height="15.0" fill="rgb(233,17,44)" rx="2" ry="2" />
<text  x="95.38" y="623.5" ></text>
</g>
<g >
<title>gcm::Engine::calculate (14,927 samples, 96.94%)</title><rect x="10.9" y="709" width="1143.9" height="15.0" fill="rgb(227,185,29)" rx="2" ry="2" />
<text  x="13.92" y="719.5" >gcm::Engine::calculate</text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::fastScanForOwnerTetr (2 samples, 0.01%)</title><rect x="11.5" y="581" width="0.1" height="15.0" fill="rgb(236,50,30)" rx="2" ry="2" />
<text  x="14.46" y="591.5" ></text>
</g>
<g >
<title>vtkDataArray::GetRange (15 samples, 0.10%)</title><rect x="39.5" y="373" width="1.2" height="15.0" fill="rgb(247,172,52)" rx="2" ry="2" />
<text  x="42.50" y="383.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (9 samples, 0.06%)</title><rect x="202.2" y="645" width="0.7" height="15.0" fill="rgb(229,159,43)" rx="2" ry="2" />
<text  x="205.20" y="655.5" ></text>
</g>
<g >
<title>gcm::CalcNode::setRho (4 samples, 0.03%)</title><rect x="876.2" y="565" width="0.3" height="15.0" fill="rgb(252,102,4)" rx="2" ry="2" />
<text  x="879.19" y="575.5" ></text>
</g>
<g >
<title>vtkStreamingDemandDrivenPipeline::ProcessRequest (612 samples, 3.97%)</title><rect x="39.0" y="533" width="46.9" height="15.0" fill="rgb(225,105,50)" rx="2" ry="2" />
<text  x="41.97" y="543.5" >vtkS..</text>
</g>
<g >
<title>gcm::TetrMeshSecondOrder::getTetr2 (3 samples, 0.02%)</title><rect x="321.8" y="597" width="0.3" height="15.0" fill="rgb(243,48,38)" rx="2" ry="2" />
<text  x="324.82" y="607.5" ></text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;(anonymous namespace)::DistinctCellTypesWorker, true&gt;::Execute (7 samples, 0.05%)</title><rect x="39.0" y="357" width="0.5" height="15.0" fill="rgb(243,219,41)" rx="2" ry="2" />
<text  x="41.97" y="367.5" ></text>
</g>
<g >
<title>vtkzlib_adler32_z (4 samples, 0.03%)</title><rect x="45.1" y="101" width="0.3" height="15.0" fill="rgb(239,50,18)" rx="2" ry="2" />
<text  x="48.10" y="111.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::decompose (7 samples, 0.05%)</title><rect x="123.1" y="629" width="0.5" height="15.0" fill="rgb(217,119,5)" rx="2" ry="2" />
<text  x="126.11" y="639.5" ></text>
</g>
<g >
<title>_int_free (8 samples, 0.05%)</title><rect x="138.7" y="501" width="0.7" height="15.0" fill="rgb(242,135,8)" rx="2" ry="2" />
<text  x="141.74" y="511.5" ></text>
</g>
<g >
<title>vtkDataArray::GetRange (15 samples, 0.10%)</title><rect x="39.5" y="357" width="1.2" height="15.0" fill="rgb(229,9,10)" rx="2" ry="2" />
<text  x="42.50" y="367.5" ></text>
</g>
<g >
<title>gcm::Mesh::getMaxEigenvalue (187 samples, 1.21%)</title><rect x="120.6" y="645" width="14.3" height="15.0" fill="rgb(206,147,46)" rx="2" ry="2" />
<text  x="123.58" y="655.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getL (9 samples, 0.06%)</title><rect x="123.6" y="629" width="0.7" height="15.0" fill="rgb(252,197,45)" rx="2" ry="2" />
<text  x="126.65" y="639.5" ></text>
</g>
<g >
<title>gcm::CalcNode::~CalcNode (8 samples, 0.05%)</title><rect x="205.6" y="645" width="0.6" height="15.0" fill="rgb(236,179,33)" rx="2" ry="2" />
<text  x="208.57" y="655.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::findOwnerTetr (44 samples, 0.29%)</title><rect x="402.1" y="581" width="3.3" height="15.0" fill="rgb(237,134,37)" rx="2" ry="2" />
<text  x="405.06" y="591.5" ></text>
</g>
<g >
<title>_int_malloc (129 samples, 0.84%)</title><rect x="1155.0" y="741" width="9.9" height="15.0" fill="rgb(205,85,42)" rx="2" ry="2" />
<text  x="1157.98" y="751.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteArrayAppendedData (9 samples, 0.06%)</title><rect x="30.5" y="373" width="0.7" height="15.0" fill="rgb(208,8,54)" rx="2" ry="2" />
<text  x="33.54" y="383.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataInternal (227 samples, 1.47%)</title><rect x="40.7" y="341" width="17.3" height="15.0" fill="rgb(214,132,48)" rx="2" ry="2" />
<text  x="43.65" y="351.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::isInnerPoint (350 samples, 2.27%)</title><rect x="910.1" y="581" width="26.9" height="15.0" fill="rgb(237,67,50)" rx="2" ry="2" />
<text  x="913.14" y="591.5" >g..</text>
</g>
<g >
<title>vtkzlib_adler32 (5 samples, 0.03%)</title><rect x="61.9" y="53" width="0.4" height="15.0" fill="rgb(205,27,23)" rx="2" ry="2" />
<text  x="64.88" y="63.5" ></text>
</g>
<g >
<title>vtkSMPTools::For&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;int&gt;, int&gt; &gt; (7 samples, 0.05%)</title><rect x="39.5" y="165" width="0.5" height="15.0" fill="rgb(231,228,40)" rx="2" ry="2" />
<text  x="42.50" y="175.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataBlock (15 samples, 0.10%)</title><rect x="16.9" y="229" width="1.1" height="15.0" fill="rgb(214,119,29)" rx="2" ry="2" />
<text  x="19.90" y="239.5" ></text>
</g>
<g >
<title>fill_window (4 samples, 0.03%)</title><rect x="45.1" y="149" width="0.3" height="15.0" fill="rgb(219,66,11)" rx="2" ry="2" />
<text  x="48.10" y="159.5" ></text>
</g>
<g >
<title>gcm::TetrSecondOrderMinMaxInterpolator::interpolate@plt (4 samples, 0.03%)</title><rect x="889.9" y="597" width="0.3" height="15.0" fill="rgb(242,39,51)" rx="2" ry="2" />
<text  x="892.90" y="607.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isInner (4 samples, 0.03%)</title><rect x="252.6" y="613" width="0.3" height="15.0" fill="rgb(243,203,28)" rx="2" ry="2" />
<text  x="255.62" y="623.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNode (2 samples, 0.01%)</title><rect x="12.1" y="613" width="0.1" height="15.0" fill="rgb(235,179,33)" rx="2" ry="2" />
<text  x="15.07" y="623.5" ></text>
</g>
<g >
<title>vtkzlib__tr_flush_block (3 samples, 0.02%)</title><rect x="58.7" y="133" width="0.2" height="15.0" fill="rgb(235,138,48)" rx="2" ry="2" />
<text  x="61.66" y="143.5" ></text>
</g>
<g >
<title>gcm::TetrMeshSecondOrder::interpolateNode (2 samples, 0.01%)</title><rect x="940.0" y="613" width="0.2" height="15.0" fill="rgb(241,20,32)" rx="2" ry="2" />
<text  x="943.02" y="623.5" ></text>
</g>
<g >
<title>vtkBase64OutputStream::Write (2 samples, 0.01%)</title><rect x="12.4" y="197" width="0.1" height="15.0" fill="rgb(223,73,36)" rx="2" ry="2" />
<text  x="15.38" y="207.5" ></text>
</g>
<g >
<title>gcm::InterpolationFixedAxis::prepare_node (9,021 samples, 58.59%)</title><rect x="249.5" y="629" width="691.3" height="15.0" fill="rgb(230,202,10)" rx="2" ry="2" />
<text  x="252.48" y="639.5" >gcm::InterpolationFixedAxis::prepare_node</text>
</g>
<g >
<title>gcm::RheologyMatrix::getU1 (314 samples, 2.04%)</title><rect x="1045.2" y="613" width="24.1" height="15.0" fill="rgb(242,184,23)" rx="2" ry="2" />
<text  x="1048.24" y="623.5" >g..</text>
</g>
<g >
<title>vtkBase64OutputStream::EncodeTriplet (2 samples, 0.01%)</title><rect x="18.1" y="213" width="0.2" height="15.0" fill="rgb(242,184,53)" rx="2" ry="2" />
<text  x="21.12" y="223.5" ></text>
</g>
<g >
<title>vtkCellArray::InsertNextCell (8 samples, 0.05%)</title><rect x="38.2" y="581" width="0.6" height="15.0" fill="rgb(230,126,4)" rx="2" ry="2" />
<text  x="41.20" y="591.5" ></text>
</g>
<g >
<title>vtkDemandDrivenPipeline::ExecuteData (282 samples, 1.83%)</title><rect x="12.3" y="485" width="21.6" height="15.0" fill="rgb(243,136,21)" rx="2" ry="2" />
<text  x="15.30" y="495.5" >v..</text>
</g>
<g >
<title>gcm::AABB::isInAABB@plt (4 samples, 0.03%)</title><rect x="333.9" y="581" width="0.3" height="15.0" fill="rgb(218,213,50)" rx="2" ry="2" />
<text  x="336.85" y="591.5" ></text>
</g>
<g >
<title>gcm::Engine::doNextStepAfterStages (268 samples, 1.74%)</title><rect x="85.9" y="677" width="20.5" height="15.0" fill="rgb(233,140,32)" rx="2" ry="2" />
<text  x="88.87" y="687.5" ></text>
</g>
<g >
<title>gcm::gcm_matrix::get@plt (4 samples, 0.03%)</title><rect x="940.5" y="613" width="0.3" height="15.0" fill="rgb(217,8,8)" rx="2" ry="2" />
<text  x="943.48" y="623.5" ></text>
</g>
<g >
<title>deflate_slow (204 samples, 1.32%)</title><rect x="42.4" y="165" width="15.6" height="15.0" fill="rgb(248,146,48)" rx="2" ry="2" />
<text  x="45.42" y="175.5" ></text>
</g>
<g >
<title>acos@plt (2 samples, 0.01%)</title><rect x="103.3" y="629" width="0.2" height="15.0" fill="rgb(231,77,50)" rx="2" ry="2" />
<text  x="106.34" y="639.5" ></text>
</g>
<g >
<title>vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;double&gt;, double&gt;::operator (4 samples, 0.03%)</title><rect x="16.5" y="133" width="0.3" height="15.0" fill="rgb(254,128,18)" rx="2" ry="2" />
<text  x="19.51" y="143.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isInner@plt (6 samples, 0.04%)</title><rect x="252.9" y="613" width="0.5" height="15.0" fill="rgb(240,113,24)" rx="2" ry="2" />
<text  x="255.93" y="623.5" ></text>
</g>
<g >
<title>gcm::Engine::doNextStep (13,949 samples, 90.59%)</title><rect x="85.9" y="693" width="1068.9" height="15.0" fill="rgb(243,215,40)" rx="2" ry="2" />
<text  x="88.87" y="703.5" >gcm::Engine::doNextStep</text>
</g>
<g >
<title>gcm::ICalcNode::ICalcNode@plt (7 samples, 0.05%)</title><rect x="1133.6" y="581" width="0.5" height="15.0" fill="rgb(212,6,23)" rx="2" ry="2" />
<text  x="1136.60" y="591.5" ></text>
</g>
<g >
<title>gcm::Mesh::applyCorrectors (25 samples, 0.16%)</title><rect x="86.2" y="661" width="1.9" height="15.0" fill="rgb(206,36,38)" rx="2" ry="2" />
<text  x="89.17" y="671.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getU (58 samples, 0.38%)</title><rect x="940.9" y="629" width="4.4" height="15.0" fill="rgb(216,226,50)" rx="2" ry="2" />
<text  x="943.87" y="639.5" ></text>
</g>
<g >
<title>clear_rec (179 samples, 1.16%)</title><rect x="137.4" y="597" width="13.8" height="15.0" fill="rgb(217,186,37)" rx="2" ry="2" />
<text  x="140.44" y="607.5" ></text>
</g>
<g >
<title>vtkDataArrayPrivate::ComputeScalarRange&lt;1&gt;::operator (6 samples, 0.04%)</title><rect x="40.0" y="229" width="0.5" height="15.0" fill="rgb(212,57,28)" rx="2" ry="2" />
<text  x="43.04" y="239.5" ></text>
</g>
<g >
<title>vtkzlib__tr_flush_block (3 samples, 0.02%)</title><rect x="33.7" y="85" width="0.2" height="15.0" fill="rgb(244,161,5)" rx="2" ry="2" />
<text  x="36.68" y="95.5" ></text>
</g>
<g >
<title>gcm::gcm_matrix::get (11 samples, 0.07%)</title><rect x="133.3" y="629" width="0.8" height="15.0" fill="rgb(209,36,14)" rx="2" ry="2" />
<text  x="136.30" y="639.5" ></text>
</g>
<g >
<title>gcm::CalcNode::CalcNode@plt (12 samples, 0.08%)</title><rect x="228.0" y="629" width="0.9" height="15.0" fill="rgb(244,168,15)" rx="2" ry="2" />
<text  x="231.02" y="639.5" ></text>
</g>
<g >
<title>gcm::Engine::clear (2 samples, 0.01%)</title><rect x="1154.8" y="693" width="0.2" height="15.0" fill="rgb(205,12,5)" rx="2" ry="2" />
<text  x="1157.83" y="703.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.01%)</title><rect x="1170.3" y="709" width="0.2" height="15.0" fill="rgb(218,59,35)" rx="2" ry="2" />
<text  x="1173.31" y="719.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getL (6 samples, 0.04%)</title><rect x="897.2" y="581" width="0.4" height="15.0" fill="rgb(212,79,3)" rx="2" ry="2" />
<text  x="900.18" y="591.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isBorder (3 samples, 0.02%)</title><rect x="286.9" y="581" width="0.2" height="15.0" fill="rgb(231,30,9)" rx="2" ry="2" />
<text  x="289.88" y="591.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5 samples, 0.03%)</title><rect x="138.1" y="517" width="0.3" height="15.0" fill="rgb(216,147,40)" rx="2" ry="2" />
<text  x="141.05" y="527.5" ></text>
</g>
<g >
<title>gcm::linal::getXRotationMatrix (10 samples, 0.06%)</title><rect x="97.1" y="597" width="0.8" height="15.0" fill="rgb(252,211,50)" rx="2" ry="2" />
<text  x="100.13" y="607.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::findOwnerTetr (2 samples, 0.01%)</title><rect x="11.5" y="597" width="0.1" height="15.0" fill="rgb(206,139,5)" rx="2" ry="2" />
<text  x="14.46" y="607.5" ></text>
</g>
<g >
<title>gcm::TetrSecondOrderMinMaxInterpolator::interpolate (1,981 samples, 12.87%)</title><rect x="733.9" y="581" width="151.8" height="15.0" fill="rgb(219,51,1)" rx="2" ry="2" />
<text  x="736.88" y="591.5" >gcm::TetrSecondOrde..</text>
</g>
<g >
<title>vtkArrayDispatch::DispatchByArray&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (50 samples, 0.32%)</title><rect x="12.4" y="325" width="3.8" height="15.0" fill="rgb(241,145,0)" rx="2" ry="2" />
<text  x="15.38" y="335.5" ></text>
</g>
<g >
<title>gcm::Mesh::applyRheology (4 samples, 0.03%)</title><rect x="88.1" y="661" width="0.3" height="15.0" fill="rgb(225,220,19)" rx="2" ry="2" />
<text  x="91.09" y="671.5" ></text>
</g>
<g >
<title>vtkSMPTools::For&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;int&gt;, int&gt; &gt; (3 samples, 0.02%)</title><rect x="16.2" y="181" width="0.2" height="15.0" fill="rgb(230,174,51)" rx="2" ry="2" />
<text  x="19.21" y="191.5" ></text>
</g>
<g >
<title>deflate_slow (11 samples, 0.07%)</title><rect x="58.0" y="149" width="0.9" height="15.0" fill="rgb(244,166,48)" rx="2" ry="2" />
<text  x="61.05" y="159.5" ></text>
</g>
<g >
<title>clear_rec (179 samples, 1.16%)</title><rect x="137.4" y="581" width="13.8" height="15.0" fill="rgb(222,38,32)" rx="2" ry="2" />
<text  x="140.44" y="591.5" ></text>
</g>
<g >
<title>scalarProduct (6 samples, 0.04%)</title><rect x="885.7" y="581" width="0.4" height="15.0" fill="rgb(221,7,52)" rx="2" ry="2" />
<text  x="888.69" y="591.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (178 samples, 1.16%)</title><rect x="272.6" y="597" width="13.7" height="15.0" fill="rgb(234,56,21)" rx="2" ry="2" />
<text  x="275.62" y="607.5" ></text>
</g>
<g >
<title>tetrVolume (16 samples, 0.10%)</title><rect x="886.5" y="581" width="1.2" height="15.0" fill="rgb(217,97,20)" rx="2" ry="2" />
<text  x="889.46" y="591.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getU@plt (6 samples, 0.04%)</title><rect x="222.0" y="597" width="0.4" height="15.0" fill="rgb(233,32,11)" rx="2" ry="2" />
<text  x="224.97" y="607.5" ></text>
</g>
<g >
<title>__cos_avx (3 samples, 0.02%)</title><rect x="100.6" y="629" width="0.2" height="15.0" fill="rgb(230,184,11)" rx="2" ry="2" />
<text  x="103.58" y="639.5" ></text>
</g>
<g >
<title>gcm::Mesh::clearContactState (13 samples, 0.08%)</title><rect x="119.5" y="661" width="1.0" height="15.0" fill="rgb(217,224,38)" rx="2" ry="2" />
<text  x="122.51" y="671.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::DispatchByArray&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (9 samples, 0.06%)</title><rect x="30.5" y="325" width="0.7" height="15.0" fill="rgb(212,208,11)" rx="2" ry="2" />
<text  x="33.54" y="335.5" ></text>
</g>
<g >
<title>vtkDataCompressor::Compress (159 samples, 1.03%)</title><rect x="18.3" y="229" width="12.2" height="15.0" fill="rgb(253,92,4)" rx="2" ry="2" />
<text  x="21.28" y="239.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.01%)</title><rect x="1154.8" y="629" width="0.2" height="15.0" fill="rgb(219,86,24)" rx="2" ry="2" />
<text  x="1157.83" y="639.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (35 samples, 0.23%)</title><rect x="31.2" y="293" width="2.7" height="15.0" fill="rgb(245,159,4)" rx="2" ry="2" />
<text  x="34.23" y="303.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.01%)</title><rect x="148.8" y="421" width="0.1" height="15.0" fill="rgb(249,98,29)" rx="2" ry="2" />
<text  x="151.78" y="431.5" ></text>
</g>
<g >
<title>gcm::SimpleVolumeCalculator::doCalc (1,744 samples, 11.33%)</title><rect x="960.5" y="629" width="133.6" height="15.0" fill="rgb(253,93,44)" rx="2" ry="2" />
<text  x="963.48" y="639.5" >gcm::SimpleVolum..</text>
</g>
<g >
<title>deflate_slow (35 samples, 0.23%)</title><rect x="31.2" y="101" width="2.7" height="15.0" fill="rgb(227,18,21)" rx="2" ry="2" />
<text  x="34.23" y="111.5" ></text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;(anonymous namespace)::DistinctCellTypesWorker, true&gt;::For (7 samples, 0.05%)</title><rect x="39.0" y="389" width="0.5" height="15.0" fill="rgb(221,209,23)" rx="2" ry="2" />
<text  x="41.97" y="399.5" ></text>
</g>
<g >
<title>vtkBase64OutputStream::EncodeTriplet (2 samples, 0.01%)</title><rect x="12.4" y="181" width="0.1" height="15.0" fill="rgb(224,100,21)" rx="2" ry="2" />
<text  x="15.38" y="191.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::checkCharactCache (6 samples, 0.04%)</title><rect x="34.8" y="565" width="0.4" height="15.0" fill="rgb(232,70,1)" rx="2" ry="2" />
<text  x="37.75" y="575.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (9 samples, 0.06%)</title><rect x="30.5" y="277" width="0.7" height="15.0" fill="rgb(246,55,52)" rx="2" ry="2" />
<text  x="33.54" y="287.5" ></text>
</g>
<g >
<title>gcm::Mesh::copyValues (76 samples, 0.49%)</title><rect x="189.0" y="661" width="5.8" height="15.0" fill="rgb(239,97,23)" rx="2" ry="2" />
<text  x="192.02" y="671.5" ></text>
</g>
<g >
<title>__cos_avx (53 samples, 0.34%)</title><rect x="1170.6" y="757" width="4.1" height="15.0" fill="rgb(243,82,49)" rx="2" ry="2" />
<text  x="1173.61" y="767.5" ></text>
</g>
<g >
<title>deflate_slow (48 samples, 0.31%)</title><rect x="12.5" y="133" width="3.7" height="15.0" fill="rgb(209,50,36)" rx="2" ry="2" />
<text  x="15.53" y="143.5" ></text>
</g>
<g >
<title>vectorNorm (3 samples, 0.02%)</title><rect x="905.1" y="565" width="0.2" height="15.0" fill="rgb(232,8,51)" rx="2" ry="2" />
<text  x="908.08" y="575.5" ></text>
</g>
<g >
<title>longest_match (283 samples, 1.84%)</title><rect x="62.3" y="85" width="21.7" height="15.0" fill="rgb(215,56,9)" rx="2" ry="2" />
<text  x="65.26" y="95.5" >l..</text>
</g>
<g >
<title>gcm::ICalcNode::ICalcNode (7 samples, 0.05%)</title><rect x="91.8" y="597" width="0.6" height="15.0" fill="rgb(239,40,45)" rx="2" ry="2" />
<text  x="94.84" y="607.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (177 samples, 1.15%)</title><rect x="16.9" y="309" width="13.6" height="15.0" fill="rgb(247,119,15)" rx="2" ry="2" />
<text  x="19.90" y="319.5" ></text>
</g>
<g >
<title>__ieee754_acos_sse2 (3 samples, 0.02%)</title><rect x="10.9" y="597" width="0.2" height="15.0" fill="rgb(242,123,41)" rx="2" ry="2" />
<text  x="13.92" y="607.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getL (6 samples, 0.04%)</title><rect x="109.0" y="613" width="0.5" height="15.0" fill="rgb(229,83,52)" rx="2" ry="2" />
<text  x="112.01" y="623.5" ></text>
</g>
<g >
<title>vtkzlib_compress2 (347 samples, 2.25%)</title><rect x="59.2" y="133" width="26.6" height="15.0" fill="rgb(243,185,45)" rx="2" ry="2" />
<text  x="62.20" y="143.5" >v..</text>
</g>
<g >
<title>vtkDataArrayPrivate::ComputeScalarRange&lt;1&gt;::operator (7 samples, 0.05%)</title><rect x="39.5" y="197" width="0.5" height="15.0" fill="rgb(242,135,41)" rx="2" ry="2" />
<text  x="42.50" y="207.5" ></text>
</g>
<g >
<title>gcm::linal::getYRotationMatrix (17 samples, 0.11%)</title><rect x="97.9" y="597" width="1.3" height="15.0" fill="rgb(221,165,28)" rx="2" ry="2" />
<text  x="100.90" y="607.5" ></text>
</g>
<g >
<title>gcm::InterpolationFixedAxis::find_nodes_on_previous_time_layer (2 samples, 0.01%)</title><rect x="249.3" y="629" width="0.2" height="15.0" fill="rgb(219,210,3)" rx="2" ry="2" />
<text  x="252.33" y="639.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNode@plt (5 samples, 0.03%)</title><rect x="905.8" y="581" width="0.4" height="15.0" fill="rgb(241,203,40)" rx="2" ry="2" />
<text  x="908.77" y="591.5" ></text>
</g>
<g >
<title>vtkXMLUnstructuredDataWriter::ProcessRequest (612 samples, 3.97%)</title><rect x="39.0" y="453" width="46.9" height="15.0" fill="rgb(221,156,53)" rx="2" ry="2" />
<text  x="41.97" y="463.5" >vtkX..</text>
</g>
<g >
<title>gcm::AABB::isInAABB (42 samples, 0.27%)</title><rect x="411.9" y="565" width="3.3" height="15.0" fill="rgb(205,167,3)" rx="2" ry="2" />
<text  x="414.94" y="575.5" ></text>
</g>
<g >
<title>gcm::FailureModel::checkFailure (147 samples, 0.95%)</title><rect x="88.9" y="645" width="11.3" height="15.0" fill="rgb(227,182,38)" rx="2" ry="2" />
<text  x="91.93" y="655.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteArrayAppendedData (50 samples, 0.32%)</title><rect x="12.4" y="373" width="3.8" height="15.0" fill="rgb(232,206,21)" rx="2" ry="2" />
<text  x="15.38" y="383.5" ></text>
</g>
<g >
<title>longest_match (5 samples, 0.03%)</title><rect x="58.3" y="133" width="0.4" height="15.0" fill="rgb(206,11,4)" rx="2" ry="2" />
<text  x="61.28" y="143.5" ></text>
</g>
<g >
<title>gcm::SnapshotWriter::dump[abi:cxx11] (300 samples, 1.95%)</title><rect x="10.9" y="661" width="23.0" height="15.0" fill="rgb(225,3,14)" rx="2" ry="2" />
<text  x="13.92" y="671.5" >g..</text>
</g>
<g >
<title>gcm::RheologyMatrix::decompose (7 samples, 0.05%)</title><rect x="894.4" y="597" width="0.6" height="15.0" fill="rgb(215,11,5)" rx="2" ry="2" />
<text  x="897.43" y="607.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::ScalarRangeDispatchWrapper&amp;&gt; (7 samples, 0.05%)</title><rect x="39.5" y="229" width="0.5" height="15.0" fill="rgb(226,31,47)" rx="2" ry="2" />
<text  x="42.50" y="239.5" ></text>
</g>
<g >
<title>clear_rec (25 samples, 0.16%)</title><rect x="149.2" y="421" width="1.9" height="15.0" fill="rgb(252,66,50)" rx="2" ry="2" />
<text  x="152.17" y="431.5" ></text>
</g>
<g >
<title>gcm::Mesh::snapshot[abi:cxx11] (677 samples, 4.40%)</title><rect x="34.0" y="677" width="51.9" height="15.0" fill="rgb(208,172,43)" rx="2" ry="2" />
<text  x="36.99" y="687.5" >gcm::..</text>
</g>
<g >
<title>vtkXMLWriter::WriteArrayAppendedData (11 samples, 0.07%)</title><rect x="58.0" y="373" width="0.9" height="15.0" fill="rgb(236,24,27)" rx="2" ry="2" />
<text  x="61.05" y="383.5" ></text>
</g>
<g >
<title>vtkBase64Utilities::EncodeTriplet (3 samples, 0.02%)</title><rect x="42.2" y="197" width="0.2" height="15.0" fill="rgb(219,169,50)" rx="2" ry="2" />
<text  x="45.19" y="207.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::Dispatch::Execute&lt;(anonymous namespace)::ScalarRangeDispatchWrapper&amp;&gt; (8 samples, 0.05%)</title><rect x="16.2" y="309" width="0.6" height="15.0" fill="rgb(236,41,54)" rx="2" ry="2" />
<text  x="19.21" y="319.5" ></text>
</g>
<g >
<title>vtkXMLWriterHelper::WriteBinaryDataBlock (17 samples, 0.11%)</title><rect x="40.7" y="245" width="1.3" height="15.0" fill="rgb(231,96,43)" rx="2" ry="2" />
<text  x="43.65" y="255.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::findOwnerTetr (6 samples, 0.04%)</title><rect x="34.8" y="597" width="0.4" height="15.0" fill="rgb(210,162,4)" rx="2" ry="2" />
<text  x="37.75" y="607.5" ></text>
</g>
<g >
<title>longest_match (129 samples, 0.84%)</title><rect x="20.2" y="149" width="9.9" height="15.0" fill="rgb(214,78,4)" rx="2" ry="2" />
<text  x="23.19" y="159.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataInternal (352 samples, 2.29%)</title><rect x="58.9" y="341" width="27.0" height="15.0" fill="rgb(239,63,3)" rx="2" ry="2" />
<text  x="61.89" y="351.5" >v..</text>
</g>
<g >
<title>gcm::RheologyMatrix::getU1 (56 samples, 0.36%)</title><rect x="1065.0" y="597" width="4.3" height="15.0" fill="rgb(210,114,47)" rx="2" ry="2" />
<text  x="1068.01" y="607.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (9 samples, 0.06%)</title><rect x="30.5" y="293" width="0.7" height="15.0" fill="rgb(244,208,31)" rx="2" ry="2" />
<text  x="33.54" y="303.5" ></text>
</g>
<g >
<title>gcm::CalcNode::CalcNode@plt (17 samples, 0.11%)</title><rect x="1134.1" y="597" width="1.3" height="15.0" fill="rgb(246,170,48)" rx="2" ry="2" />
<text  x="1137.13" y="607.5" ></text>
</g>
<g >
<title>gsl_matrix_swap_rows (6 samples, 0.04%)</title><rect x="1185.6" y="757" width="0.4" height="15.0" fill="rgb(229,220,31)" rx="2" ry="2" />
<text  x="1188.56" y="767.5" ></text>
</g>
<g >
<title>gcm::Mesh::processMaterialFailure (152 samples, 0.99%)</title><rect x="88.6" y="661" width="11.7" height="15.0" fill="rgb(207,175,41)" rx="2" ry="2" />
<text  x="91.63" y="671.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::charactCacheAvailable (5 samples, 0.03%)</title><rect x="423.8" y="565" width="0.4" height="15.0" fill="rgb(234,143,30)" rx="2" ry="2" />
<text  x="426.82" y="575.5" ></text>
</g>
<g >
<title>gcm::CalcNode::operator= (8 samples, 0.05%)</title><rect x="91.2" y="597" width="0.6" height="15.0" fill="rgb(224,162,46)" rx="2" ry="2" />
<text  x="94.23" y="607.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getL (9 samples, 0.06%)</title><rect x="131.4" y="597" width="0.7" height="15.0" fill="rgb(210,227,20)" rx="2" ry="2" />
<text  x="134.39" y="607.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (352 samples, 2.29%)</title><rect x="58.9" y="229" width="27.0" height="15.0" fill="rgb(249,22,52)" rx="2" ry="2" />
<text  x="61.89" y="239.5" >v..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (12 samples, 0.08%)</title><rect x="144.6" y="453" width="0.9" height="15.0" fill="rgb(230,164,26)" rx="2" ry="2" />
<text  x="147.57" y="463.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isBorder (2 samples, 0.01%)</title><rect x="232.2" y="629" width="0.1" height="15.0" fill="rgb(246,72,52)" rx="2" ry="2" />
<text  x="235.16" y="639.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::isInnerPoint (2 samples, 0.01%)</title><rect x="11.5" y="613" width="0.1" height="15.0" fill="rgb(215,123,24)" rx="2" ry="2" />
<text  x="14.46" y="623.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataBlock (11 samples, 0.07%)</title><rect x="58.0" y="245" width="0.9" height="15.0" fill="rgb(216,36,6)" rx="2" ry="2" />
<text  x="61.05" y="255.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataBlock (209 samples, 1.36%)</title><rect x="42.0" y="261" width="16.0" height="15.0" fill="rgb(229,156,46)" rx="2" ry="2" />
<text  x="45.03" y="271.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (2 samples, 0.01%)</title><rect x="1189.7" y="757" width="0.1" height="15.0" fill="rgb(232,74,50)" rx="2" ry="2" />
<text  x="1192.69" y="767.5" ></text>
</g>
<g >
<title>kd_insert3 (2 samples, 0.01%)</title><rect x="188.2" y="645" width="0.1" height="15.0" fill="rgb(233,21,8)" rx="2" ry="2" />
<text  x="191.17" y="655.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isLocal (4 samples, 0.03%)</title><rect x="190.6" y="645" width="0.3" height="15.0" fill="rgb(228,206,36)" rx="2" ry="2" />
<text  x="193.62" y="655.5" ></text>
</g>
<g >
<title>vtkzlib_deflate (11 samples, 0.07%)</title><rect x="58.0" y="165" width="0.9" height="15.0" fill="rgb(232,83,22)" rx="2" ry="2" />
<text  x="61.05" y="175.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getL@plt (9 samples, 0.06%)</title><rect x="109.5" y="613" width="0.7" height="15.0" fill="rgb(207,137,15)" rx="2" ry="2" />
<text  x="112.47" y="623.5" ></text>
</g>
<g >
<title>vtkDataArray::ComputeRange (9 samples, 0.06%)</title><rect x="16.2" y="341" width="0.7" height="15.0" fill="rgb(212,196,35)" rx="2" ry="2" />
<text  x="19.21" y="351.5" ></text>
</g>
<g >
<title>vtkBase64OutputStream::Write (5 samples, 0.03%)</title><rect x="42.0" y="229" width="0.4" height="15.0" fill="rgb(242,226,27)" rx="2" ry="2" />
<text  x="45.03" y="239.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (50 samples, 0.32%)</title><rect x="12.4" y="261" width="3.8" height="15.0" fill="rgb(231,98,36)" rx="2" ry="2" />
<text  x="15.38" y="271.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (352 samples, 2.29%)</title><rect x="58.9" y="293" width="27.0" height="15.0" fill="rgb(233,209,13)" rx="2" ry="2" />
<text  x="61.89" y="303.5" >v..</text>
</g>
<g >
<title>build_tree (4 samples, 0.03%)</title><rect x="56.8" y="133" width="0.3" height="15.0" fill="rgb(249,162,12)" rx="2" ry="2" />
<text  x="59.82" y="143.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getU@plt (6 samples, 0.04%)</title><rect x="222.8" y="613" width="0.5" height="15.0" fill="rgb(222,175,38)" rx="2" ry="2" />
<text  x="225.81" y="623.5" ></text>
</g>
<g >
<title>_int_free (37 samples, 0.24%)</title><rect x="199.4" y="645" width="2.8" height="15.0" fill="rgb(233,84,40)" rx="2" ry="2" />
<text  x="202.36" y="655.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::decompose@plt (2 samples, 0.01%)</title><rect x="938.8" y="613" width="0.1" height="15.0" fill="rgb(231,86,45)" rx="2" ry="2" />
<text  x="941.80" y="623.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (3 samples, 0.02%)</title><rect x="1170.3" y="741" width="0.2" height="15.0" fill="rgb(250,133,43)" rx="2" ry="2" />
<text  x="1173.31" y="751.5" ></text>
</g>
<g >
<title>findTriangleFaceNormal (22 samples, 0.14%)</title><rect x="903.8" y="581" width="1.7" height="15.0" fill="rgb(224,176,52)" rx="2" ry="2" />
<text  x="906.77" y="591.5" ></text>
</g>
<g >
<title>gcm::CalcNode::getShear (3 samples, 0.02%)</title><rect x="34.1" y="629" width="0.3" height="15.0" fill="rgb(235,20,50)" rx="2" ry="2" />
<text  x="37.14" y="639.5" ></text>
</g>
<g >
<title>gcm::Mesh::getMaxEigenvalue (165 samples, 1.07%)</title><rect x="106.6" y="629" width="12.7" height="15.0" fill="rgb(212,104,37)" rx="2" ry="2" />
<text  x="109.63" y="639.5" ></text>
</g>
<g >
<title>vtkXMLWriterHelper::WriteBinaryDataBlock (15 samples, 0.10%)</title><rect x="16.9" y="245" width="1.1" height="15.0" fill="rgb(228,217,5)" rx="2" ry="2" />
<text  x="19.90" y="255.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getU (41 samples, 0.27%)</title><rect x="1074.9" y="597" width="3.1" height="15.0" fill="rgb(223,195,47)" rx="2" ry="2" />
<text  x="1077.90" y="607.5" ></text>
</g>
<g >
<title>clear_rec (102 samples, 0.66%)</title><rect x="143.3" y="469" width="7.8" height="15.0" fill="rgb(250,62,8)" rx="2" ry="2" />
<text  x="146.27" y="479.5" ></text>
</g>
<g >
<title>fill_window (6 samples, 0.04%)</title><rect x="61.8" y="85" width="0.5" height="15.0" fill="rgb(245,217,43)" rx="2" ry="2" />
<text  x="64.80" y="95.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getU1 (71 samples, 0.46%)</title><rect x="945.3" y="629" width="5.5" height="15.0" fill="rgb(245,189,31)" rx="2" ry="2" />
<text  x="948.31" y="639.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned char&gt;, bool&gt;::pair&lt;std::_Rb_tree_iterator&lt;unsigned char&gt;, bool, true&gt; (2 samples, 0.01%)</title><rect x="39.2" y="309" width="0.2" height="15.0" fill="rgb(209,53,33)" rx="2" ry="2" />
<text  x="42.20" y="319.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (35 samples, 0.23%)</title><rect x="31.2" y="261" width="2.7" height="15.0" fill="rgb(249,187,17)" rx="2" ry="2" />
<text  x="34.23" y="271.5" ></text>
</g>
<g >
<title>vtkXMLWriterHelper::WriteBinaryDataBlock (9 samples, 0.06%)</title><rect x="30.5" y="261" width="0.7" height="15.0" fill="rgb(206,193,3)" rx="2" ry="2" />
<text  x="33.54" y="271.5" ></text>
</g>
<g >
<title>pointInTetr (13 samples, 0.08%)</title><rect x="935.8" y="517" width="1.0" height="15.0" fill="rgb(216,28,13)" rx="2" ry="2" />
<text  x="938.81" y="527.5" ></text>
</g>
<g >
<title>vtkzlib_deflate (16 samples, 0.10%)</title><rect x="40.7" y="149" width="1.2" height="15.0" fill="rgb(210,163,1)" rx="2" ry="2" />
<text  x="43.65" y="159.5" ></text>
</g>
<g >
<title>vtkZLibDataCompressor::CompressBuffer (204 samples, 1.32%)</title><rect x="42.4" y="213" width="15.6" height="15.0" fill="rgb(226,184,22)" rx="2" ry="2" />
<text  x="45.42" y="223.5" ></text>
</g>
<g >
<title>vtkzlib_compress2 (35 samples, 0.23%)</title><rect x="31.2" y="133" width="2.7" height="15.0" fill="rgb(225,130,31)" rx="2" ry="2" />
<text  x="34.23" y="143.5" ></text>
</g>
<g >
<title>vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;int&gt;, int&gt;::operator (6 samples, 0.04%)</title><rect x="39.6" y="101" width="0.4" height="15.0" fill="rgb(215,85,18)" rx="2" ry="2" />
<text  x="42.58" y="111.5" ></text>
</g>
<g >
<title>vtkzlib_adler32_z (5 samples, 0.03%)</title><rect x="61.9" y="37" width="0.4" height="15.0" fill="rgb(223,193,40)" rx="2" ry="2" />
<text  x="64.88" y="47.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteArrayAppendedData (227 samples, 1.47%)</title><rect x="40.7" y="373" width="17.3" height="15.0" fill="rgb(253,174,9)" rx="2" ry="2" />
<text  x="43.65" y="383.5" ></text>
</g>
<g >
<title>deflate_slow (14 samples, 0.09%)</title><rect x="17.0" y="133" width="1.0" height="15.0" fill="rgb(231,175,25)" rx="2" ry="2" />
<text  x="19.97" y="143.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isFirstOrder (2 samples, 0.01%)</title><rect x="34.4" y="629" width="0.1" height="15.0" fill="rgb(248,216,49)" rx="2" ry="2" />
<text  x="37.37" y="639.5" ></text>
</g>
<g >
<title>gcm::CalcNode::calcMainStressComponents (2 samples, 0.01%)</title><rect x="11.1" y="613" width="0.2" height="15.0" fill="rgb(232,1,1)" rx="2" ry="2" />
<text  x="14.15" y="623.5" ></text>
</g>
<g >
<title>compress_block (4 samples, 0.03%)</title><rect x="30.2" y="133" width="0.3" height="15.0" fill="rgb(228,0,47)" rx="2" ry="2" />
<text  x="33.15" y="143.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::orientedExpandingScanForOwnerTetr (4,154 samples, 26.98%)</title><rect x="405.4" y="581" width="318.4" height="15.0" fill="rgb(246,44,29)" rx="2" ry="2" />
<text  x="408.43" y="591.5" >gcm::TetrMeshFirstOrder::orientedExpanding..</text>
</g>
<g >
<title>gcm::CalcNode::setMaterialId (4 samples, 0.03%)</title><rect x="344.0" y="581" width="0.3" height="15.0" fill="rgb(249,86,35)" rx="2" ry="2" />
<text  x="346.97" y="591.5" ></text>
</g>
<g >
<title>gcm::CalcNode::CalcNode (22 samples, 0.14%)</title><rect x="90.7" y="613" width="1.7" height="15.0" fill="rgb(230,100,24)" rx="2" ry="2" />
<text  x="93.69" y="623.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getU (9 samples, 0.06%)</title><rect x="221.3" y="581" width="0.7" height="15.0" fill="rgb(235,121,36)" rx="2" ry="2" />
<text  x="224.28" y="591.5" ></text>
</g>
<g >
<title>gsl_linalg_LU_decomp (37 samples, 0.24%)</title><rect x="1182.7" y="757" width="2.9" height="15.0" fill="rgb(252,62,5)" rx="2" ry="2" />
<text  x="1185.72" y="767.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (17 samples, 0.11%)</title><rect x="40.7" y="277" width="1.3" height="15.0" fill="rgb(231,36,51)" rx="2" ry="2" />
<text  x="43.65" y="287.5" ></text>
</g>
<g >
<title>vtkDemandDrivenPipeline::UpdateData (282 samples, 1.83%)</title><rect x="12.3" y="549" width="21.6" height="15.0" fill="rgb(240,180,9)" rx="2" ry="2" />
<text  x="15.30" y="559.5" >v..</text>
</g>
<g >
<title>vtkArrayDispatch::DispatchByArray&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (35 samples, 0.23%)</title><rect x="31.2" y="325" width="2.7" height="15.0" fill="rgb(211,22,20)" rx="2" ry="2" />
<text  x="34.23" y="335.5" ></text>
</g>
<g >
<title>vtkAlgorithm::Update (282 samples, 1.83%)</title><rect x="12.3" y="613" width="21.6" height="15.0" fill="rgb(215,116,48)" rx="2" ry="2" />
<text  x="15.30" y="623.5" >v..</text>
</g>
<g >
<title>vectorSquareNorm (6 samples, 0.04%)</title><rect x="888.8" y="581" width="0.5" height="15.0" fill="rgb(251,215,46)" rx="2" ry="2" />
<text  x="891.83" y="591.5" ></text>
</g>
<g >
<title>gcm::CalcNode::CalcNode (193 samples, 1.25%)</title><rect x="1119.3" y="597" width="14.8" height="15.0" fill="rgb(231,150,34)" rx="2" ry="2" />
<text  x="1122.34" y="607.5" ></text>
</g>
<g >
<title>std::array&lt;double, 2ul&gt;::operator[] (2 samples, 0.01%)</title><rect x="16.5" y="117" width="0.2" height="15.0" fill="rgb(219,38,51)" rx="2" ry="2" />
<text  x="19.51" y="127.5" ></text>
</g>
<g >
<title>gcm::Material::getRho (4 samples, 0.03%)</title><rect x="875.9" y="549" width="0.3" height="15.0" fill="rgb(245,53,50)" rx="2" ry="2" />
<text  x="878.88" y="559.5" ></text>
</g>
<g >
<title>gcm::Engine::createDump (300 samples, 1.95%)</title><rect x="10.9" y="693" width="23.0" height="15.0" fill="rgb(231,135,9)" rx="2" ry="2" />
<text  x="13.92" y="703.5" >g..</text>
</g>
<g >
<title>vtkXMLUnstructuredDataWriter::WriteCellsAppendedData (35 samples, 0.23%)</title><rect x="31.2" y="405" width="2.7" height="15.0" fill="rgb(216,149,24)" rx="2" ry="2" />
<text  x="34.23" y="415.5" ></text>
</g>
<g >
<title>vtkBase64Utilities::EncodeTriplet (3 samples, 0.02%)</title><rect x="59.0" y="133" width="0.2" height="15.0" fill="rgb(231,211,54)" rx="2" ry="2" />
<text  x="61.97" y="143.5" ></text>
</g>
<g >
<title>gcm::Node::Node (20 samples, 0.13%)</title><rect x="1130.9" y="565" width="1.5" height="15.0" fill="rgb(245,186,32)" rx="2" ry="2" />
<text  x="1133.92" y="575.5" ></text>
</g>
<g >
<title>vtkSMPTools::For&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;int&gt;, int&gt; &gt; (3 samples, 0.02%)</title><rect x="16.2" y="165" width="0.2" height="15.0" fill="rgb(221,53,30)" rx="2" ry="2" />
<text  x="19.21" y="175.5" ></text>
</g>
<g >
<title>gcm::CalcNode::getRheologyMatrix (10 samples, 0.06%)</title><rect x="122.3" y="629" width="0.7" height="15.0" fill="rgb(251,207,19)" rx="2" ry="2" />
<text  x="125.27" y="639.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::DispatchByArray&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (352 samples, 2.29%)</title><rect x="58.9" y="325" width="27.0" height="15.0" fill="rgb(239,62,36)" rx="2" ry="2" />
<text  x="61.89" y="335.5" >v..</text>
</g>
<g >
<title>vtkArrayDispatch::DispatchByArray&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::ScalarRangeDispatchWrapper&amp;&gt; (8 samples, 0.05%)</title><rect x="16.2" y="293" width="0.6" height="15.0" fill="rgb(208,73,9)" rx="2" ry="2" />
<text  x="19.21" y="303.5" ></text>
</g>
<g >
<title>memmove@plt (5 samples, 0.03%)</title><rect x="890.2" y="597" width="0.4" height="15.0" fill="rgb(226,143,15)" rx="2" ry="2" />
<text  x="893.21" y="607.5" ></text>
</g>
<g >
<title>clear_rec (137 samples, 0.89%)</title><rect x="140.7" y="485" width="10.5" height="15.0" fill="rgb(225,156,29)" rx="2" ry="2" />
<text  x="143.66" y="495.5" ></text>
</g>
<g >
<title>gcm::CalcNode::CalcNode (10 samples, 0.06%)</title><rect x="227.3" y="629" width="0.7" height="15.0" fill="rgb(254,196,12)" rx="2" ry="2" />
<text  x="230.26" y="639.5" ></text>
</g>
<g >
<title>vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;double&gt;, double&gt;::operator (4 samples, 0.03%)</title><rect x="40.2" y="133" width="0.3" height="15.0" fill="rgb(252,11,4)" rx="2" ry="2" />
<text  x="43.19" y="143.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getU@plt (60 samples, 0.39%)</title><rect x="1078.0" y="613" width="4.6" height="15.0" fill="rgb(250,162,21)" rx="2" ry="2" />
<text  x="1081.04" y="623.5" ></text>
</g>
<g >
<title>vtkDataArrayPrivate::DoComputeScalarRange&lt;vtkAOSDataArrayTemplate&lt;double&gt;, double, vtkDataArrayPrivate::AllValues&gt; (6 samples, 0.04%)</title><rect x="40.0" y="245" width="0.5" height="15.0" fill="rgb(217,183,29)" rx="2" ry="2" />
<text  x="43.04" y="255.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isUsed (8 samples, 0.05%)</title><rect x="119.8" y="645" width="0.6" height="15.0" fill="rgb(232,92,13)" rx="2" ry="2" />
<text  x="122.82" y="655.5" ></text>
</g>
<g >
<title>vtkzlib_compress2 (17 samples, 0.11%)</title><rect x="40.7" y="165" width="1.3" height="15.0" fill="rgb(240,111,2)" rx="2" ry="2" />
<text  x="43.65" y="175.5" ></text>
</g>
<g >
<title>pointInTetr (574 samples, 3.73%)</title><rect x="677.3" y="549" width="44.0" height="15.0" fill="rgb(244,202,30)" rx="2" ry="2" />
<text  x="680.32" y="559.5" >poin..</text>
</g>
<g >
<title>vtkXMLWriter::WriteCompressionBlock (15 samples, 0.10%)</title><rect x="16.9" y="213" width="1.1" height="15.0" fill="rgb(212,88,12)" rx="2" ry="2" />
<text  x="19.90" y="223.5" ></text>
</g>
<g >
<title>gcm::Engine::calculateRecommendedTimeStep (170 samples, 1.10%)</title><rect x="106.5" y="661" width="13.0" height="15.0" fill="rgb(248,24,16)" rx="2" ry="2" />
<text  x="109.48" y="671.5" ></text>
</g>
<g >
<title>vtkDataCompressor::Compress (35 samples, 0.23%)</title><rect x="31.2" y="165" width="2.7" height="15.0" fill="rgb(249,40,24)" rx="2" ry="2" />
<text  x="34.23" y="175.5" ></text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;int&gt;, int&gt;, true&gt;::Execute (3 samples, 0.02%)</title><rect x="16.2" y="117" width="0.2" height="15.0" fill="rgb(252,48,52)" rx="2" ry="2" />
<text  x="19.21" y="127.5" ></text>
</g>
<g >
<title>gcm::TetrMeshSecondOrder::getTetr (8 samples, 0.05%)</title><rect x="722.5" y="565" width="0.6" height="15.0" fill="rgb(208,7,51)" rx="2" ry="2" />
<text  x="725.54" y="575.5" ></text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_Impl_For&lt;vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;int&gt;, int&gt;, true&gt; &gt; (3 samples, 0.02%)</title><rect x="16.2" y="133" width="0.2" height="15.0" fill="rgb(215,207,36)" rx="2" ry="2" />
<text  x="19.21" y="143.5" ></text>
</g>
<g >
<title>gcm::AbstractVTKSnapshotWriter&lt;gcm::TetrMeshSecondOrder, vtkUnstructuredGrid, vtkXMLUnstructuredGridWriter, false, 0&gt;::dump (677 samples, 4.40%)</title><rect x="34.0" y="645" width="51.9" height="15.0" fill="rgb(230,175,11)" rx="2" ry="2" />
<text  x="36.99" y="655.5" >gcm::..</text>
</g>
<g >
<title>vtkXMLWriter::WriteCompressionBlock (11 samples, 0.07%)</title><rect x="58.0" y="229" width="0.9" height="15.0" fill="rgb(245,80,43)" rx="2" ry="2" />
<text  x="61.05" y="239.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNode@plt (2 samples, 0.01%)</title><rect x="1154.7" y="661" width="0.1" height="15.0" fill="rgb(223,87,44)" rx="2" ry="2" />
<text  x="1157.67" y="671.5" ></text>
</g>
<g >
<title>gcm::CalcNode::clearState (2 samples, 0.01%)</title><rect x="1136.3" y="629" width="0.1" height="15.0" fill="rgb(242,220,26)" rx="2" ry="2" />
<text  x="1139.28" y="639.5" ></text>
</g>
<g >
<title>vtkSMPTools::For&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;int&gt;, int&gt; &gt; (7 samples, 0.05%)</title><rect x="39.5" y="181" width="0.5" height="15.0" fill="rgb(254,65,38)" rx="2" ry="2" />
<text  x="42.50" y="191.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::orientedExpandingScanForOwnerTetr@plt (5 samples, 0.03%)</title><rect x="321.4" y="597" width="0.4" height="15.0" fill="rgb(231,215,25)" rx="2" ry="2" />
<text  x="324.44" y="607.5" ></text>
</g>
<g >
<title>vtkzlib_compress2 (14 samples, 0.09%)</title><rect x="17.0" y="165" width="1.0" height="15.0" fill="rgb(226,104,24)" rx="2" ry="2" />
<text  x="19.97" y="175.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNode (29 samples, 0.19%)</title><rect x="907.7" y="565" width="2.2" height="15.0" fill="rgb(248,120,38)" rx="2" ry="2" />
<text  x="910.68" y="575.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getU (35 samples, 0.23%)</title><rect x="219.3" y="597" width="2.7" height="15.0" fill="rgb(232,213,41)" rx="2" ry="2" />
<text  x="222.29" y="607.5" ></text>
</g>
<g >
<title>vtkDataCompressor::Compress (204 samples, 1.32%)</title><rect x="42.4" y="229" width="15.6" height="15.0" fill="rgb(232,192,28)" rx="2" ry="2" />
<text  x="45.42" y="239.5" ></text>
</g>
<g >
<title>gsl_linalg_LU_decomp (2 samples, 0.01%)</title><rect x="224.0" y="613" width="0.2" height="15.0" fill="rgb(254,190,52)" rx="2" ry="2" />
<text  x="227.04" y="623.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5 samples, 0.03%)</title><rect x="139.4" y="501" width="0.3" height="15.0" fill="rgb(221,37,49)" rx="2" ry="2" />
<text  x="142.36" y="511.5" ></text>
</g>
<g >
<title>deflate_slow (9 samples, 0.06%)</title><rect x="30.5" y="149" width="0.7" height="15.0" fill="rgb(212,73,14)" rx="2" ry="2" />
<text  x="33.54" y="159.5" ></text>
</g>
<g >
<title>gcm::Mesh::processStressState (80 samples, 0.52%)</title><rect x="100.3" y="661" width="6.1" height="15.0" fill="rgb(205,151,52)" rx="2" ry="2" />
<text  x="103.27" y="671.5" ></text>
</g>
<g >
<title>gcm::AbstractVTKSnapshotWriter&lt;gcm::TetrMeshSecondOrder, vtkUnstructuredGrid, vtkXMLUnstructuredGridWriter, false, 1&gt;::dump (300 samples, 1.95%)</title><rect x="10.9" y="645" width="23.0" height="15.0" fill="rgb(234,112,11)" rx="2" ry="2" />
<text  x="13.92" y="655.5" >g..</text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (11 samples, 0.07%)</title><rect x="58.0" y="293" width="0.9" height="15.0" fill="rgb(230,219,49)" rx="2" ry="2" />
<text  x="61.05" y="303.5" ></text>
</g>
<g >
<title>vtkDataArrayPrivate::DoComputeScalarRange&lt;vtkAOSDataArrayTemplate&lt;int&gt;, double, vtkDataArrayPrivate::AllValues&gt; (7 samples, 0.05%)</title><rect x="39.5" y="213" width="0.5" height="15.0" fill="rgb(229,204,1)" rx="2" ry="2" />
<text  x="42.50" y="223.5" ></text>
</g>
<g >
<title>vtkDataCompressor::Compress (17 samples, 0.11%)</title><rect x="40.7" y="197" width="1.3" height="15.0" fill="rgb(220,92,0)" rx="2" ry="2" />
<text  x="43.65" y="207.5" ></text>
</g>
<g >
<title>vtkXMLUnstructuredDataWriter::WriteCellsAppendedData (352 samples, 2.29%)</title><rect x="58.9" y="405" width="27.0" height="15.0" fill="rgb(229,7,53)" rx="2" ry="2" />
<text  x="61.89" y="415.5" >v..</text>
</g>
<g >
<title>_int_free (6 samples, 0.04%)</title><rect x="146.9" y="437" width="0.5" height="15.0" fill="rgb(214,25,30)" rx="2" ry="2" />
<text  x="149.94" y="447.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataInternal (9 samples, 0.06%)</title><rect x="30.5" y="341" width="0.7" height="15.0" fill="rgb(254,182,5)" rx="2" ry="2" />
<text  x="33.54" y="351.5" ></text>
</g>
<g >
<title>vtkStreamingDemandDrivenPipeline::ProcessRequest (282 samples, 1.83%)</title><rect x="12.3" y="533" width="21.6" height="15.0" fill="rgb(245,205,13)" rx="2" ry="2" />
<text  x="15.30" y="543.5" >v..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, unsigned char, std::_Identity&lt;unsigned char&gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;unsigned char&gt; &gt;::_M_insert_unique&lt;unsigned char const&amp;&gt; (5 samples, 0.03%)</title><rect x="39.0" y="325" width="0.4" height="15.0" fill="rgb(207,131,42)" rx="2" ry="2" />
<text  x="41.97" y="335.5" ></text>
</g>
<g >
<title>kd_insert3 (482 samples, 3.13%)</title><rect x="151.2" y="629" width="36.9" height="15.0" fill="rgb(211,57,23)" rx="2" ry="2" />
<text  x="154.16" y="639.5" >kd_..</text>
</g>
<g >
<title>gcm::gcm_matrix::get@plt (3 samples, 0.02%)</title><rect x="119.0" y="613" width="0.3" height="15.0" fill="rgb(243,195,7)" rx="2" ry="2" />
<text  x="122.05" y="623.5" ></text>
</g>
<g >
<title>gcm::CalcNode::getRheologyMatrix (42 samples, 0.27%)</title><rect x="228.9" y="629" width="3.3" height="15.0" fill="rgb(233,86,44)" rx="2" ry="2" />
<text  x="231.94" y="639.5" ></text>
</g>
<g >
<title>scalarProduct (3 samples, 0.02%)</title><rect x="904.8" y="565" width="0.2" height="15.0" fill="rgb(234,211,32)" rx="2" ry="2" />
<text  x="907.77" y="575.5" ></text>
</g>
<g >
<title>vtkSMPTools::For&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;double&gt;, double&gt; &gt; (6 samples, 0.04%)</title><rect x="40.0" y="197" width="0.5" height="15.0" fill="rgb(212,154,15)" rx="2" ry="2" />
<text  x="43.04" y="207.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isUsed (9 samples, 0.06%)</title><rect x="190.9" y="645" width="0.7" height="15.0" fill="rgb(210,166,33)" rx="2" ry="2" />
<text  x="193.93" y="655.5" ></text>
</g>
<g >
<title>vtkzlib_compress2 (48 samples, 0.31%)</title><rect x="12.5" y="165" width="3.7" height="15.0" fill="rgb(242,89,48)" rx="2" ry="2" />
<text  x="15.53" y="175.5" ></text>
</g>
<g >
<title>vtkzlib__tr_flush_block (22 samples, 0.14%)</title><rect x="84.0" y="85" width="1.6" height="15.0" fill="rgb(245,118,4)" rx="2" ry="2" />
<text  x="86.95" y="95.5" ></text>
</g>
<g >
<title>vtkzlib_deflate (35 samples, 0.23%)</title><rect x="31.2" y="117" width="2.7" height="15.0" fill="rgb(231,128,15)" rx="2" ry="2" />
<text  x="34.23" y="127.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="1113.4" y="629" width="0.3" height="15.0" fill="rgb(234,1,0)" rx="2" ry="2" />
<text  x="1116.44" y="639.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryData (9 samples, 0.06%)</title><rect x="30.5" y="357" width="0.7" height="15.0" fill="rgb(231,73,23)" rx="2" ry="2" />
<text  x="33.54" y="367.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::ScalarRangeDispatchWrapper&amp;&gt; (13 samples, 0.08%)</title><rect x="39.5" y="261" width="1.0" height="15.0" fill="rgb(212,80,13)" rx="2" ry="2" />
<text  x="42.50" y="271.5" ></text>
</g>
<g >
<title>vtkBase64OutputStream::Write (4 samples, 0.03%)</title><rect x="58.9" y="165" width="0.3" height="15.0" fill="rgb(235,189,5)" rx="2" ry="2" />
<text  x="61.89" y="175.5" ></text>
</g>
<g >
<title>gcm::Engine::doNextStepStages (12,612 samples, 81.91%)</title><rect x="188.3" y="677" width="966.5" height="15.0" fill="rgb(223,38,0)" rx="2" ry="2" />
<text  x="191.33" y="687.5" >gcm::Engine::doNextStepStages</text>
</g>
<g >
<title>vtkXMLWriter::WriteCompressionBlock (35 samples, 0.23%)</title><rect x="31.2" y="181" width="2.7" height="15.0" fill="rgb(244,181,26)" rx="2" ry="2" />
<text  x="34.23" y="191.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::findBorderNodeNormal (3 samples, 0.02%)</title><rect x="11.4" y="629" width="0.2" height="15.0" fill="rgb(243,90,52)" rx="2" ry="2" />
<text  x="14.38" y="639.5" ></text>
</g>
<g >
<title>determinant (4 samples, 0.03%)</title><rect x="922.5" y="517" width="0.3" height="15.0" fill="rgb(214,37,16)" rx="2" ry="2" />
<text  x="925.47" y="527.5" ></text>
</g>
<g >
<title>vtkXMLUnstructuredDataWriter::ProcessRequest (282 samples, 1.83%)</title><rect x="12.3" y="453" width="21.6" height="15.0" fill="rgb(211,42,50)" rx="2" ry="2" />
<text  x="15.30" y="463.5" >v..</text>
</g>
<g >
<title>gcm::CalcNode::~CalcNode (7 samples, 0.05%)</title><rect x="89.1" y="629" width="0.5" height="15.0" fill="rgb(217,118,19)" rx="2" ry="2" />
<text  x="92.09" y="639.5" ></text>
</g>
<g >
<title>vtkXMLWriter::Write (612 samples, 3.97%)</title><rect x="39.0" y="629" width="46.9" height="15.0" fill="rgb(220,123,13)" rx="2" ry="2" />
<text  x="41.97" y="639.5" >vtkX..</text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataBlock (17 samples, 0.11%)</title><rect x="40.7" y="229" width="1.3" height="15.0" fill="rgb(230,211,48)" rx="2" ry="2" />
<text  x="43.65" y="239.5" ></text>
</g>
<g >
<title>vtkDemandDrivenPipeline::ProcessRequest (612 samples, 3.97%)</title><rect x="39.0" y="517" width="46.9" height="15.0" fill="rgb(220,195,30)" rx="2" ry="2" />
<text  x="41.97" y="527.5" >vtkD..</text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataBlock (50 samples, 0.32%)</title><rect x="12.4" y="229" width="3.8" height="15.0" fill="rgb(252,34,47)" rx="2" ry="2" />
<text  x="15.38" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;gcm::CalcNode, std::allocator&lt;gcm::CalcNode&gt; &gt;::_M_default_append (290 samples, 1.88%)</title><rect x="1113.7" y="629" width="22.3" height="15.0" fill="rgb(211,129,5)" rx="2" ry="2" />
<text  x="1116.75" y="639.5" >s..</text>
</g>
<g >
<title>gcm::CalcNode::CalcNode@plt (7 samples, 0.05%)</title><rect x="1135.4" y="613" width="0.6" height="15.0" fill="rgb(218,221,47)" rx="2" ry="2" />
<text  x="1138.44" y="623.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::checkCharactCache (320 samples, 2.08%)</title><rect x="912.3" y="533" width="24.5" height="15.0" fill="rgb(244,223,6)" rx="2" ry="2" />
<text  x="915.28" y="543.5" >g..</text>
</g>
<g >
<title>vtkStreamingDemandDrivenPipeline::Update (612 samples, 3.97%)</title><rect x="39.0" y="565" width="46.9" height="15.0" fill="rgb(249,135,4)" rx="2" ry="2" />
<text  x="41.97" y="575.5" >vtkS..</text>
</g>
<g >
<title>gcm::CalcNode::isLocal (3 samples, 0.02%)</title><rect x="87.5" y="645" width="0.2" height="15.0" fill="rgb(213,222,19)" rx="2" ry="2" />
<text  x="90.48" y="655.5" ></text>
</g>
<g >
<title>vtkZLibDataCompressor::CompressBuffer (9 samples, 0.06%)</title><rect x="30.5" y="197" width="0.7" height="15.0" fill="rgb(225,145,26)" rx="2" ry="2" />
<text  x="33.54" y="207.5" ></text>
</g>
<g >
<title>__libc_start_main (14,929 samples, 96.95%)</title><rect x="10.9" y="741" width="1144.1" height="15.0" fill="rgb(254,0,53)" rx="2" ry="2" />
<text  x="13.92" y="751.5" >__libc_start_main</text>
</g>
<g >
<title>gcm::CalcNode::getRho (54 samples, 0.35%)</title><rect x="869.8" y="565" width="4.2" height="15.0" fill="rgb(250,152,36)" rx="2" ry="2" />
<text  x="872.83" y="575.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (50 samples, 0.32%)</title><rect x="12.4" y="309" width="3.8" height="15.0" fill="rgb(226,10,42)" rx="2" ry="2" />
<text  x="15.38" y="319.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (11 samples, 0.07%)</title><rect x="58.0" y="309" width="0.9" height="15.0" fill="rgb(235,164,12)" rx="2" ry="2" />
<text  x="61.05" y="319.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (352 samples, 2.29%)</title><rect x="58.9" y="277" width="27.0" height="15.0" fill="rgb(210,221,28)" rx="2" ry="2" />
<text  x="61.89" y="287.5" >v..</text>
</g>
<g >
<title>gcm::Mesh::getNode (7 samples, 0.05%)</title><rect x="1154.1" y="661" width="0.6" height="15.0" fill="rgb(247,38,27)" rx="2" ry="2" />
<text  x="1157.14" y="671.5" ></text>
</g>
<g >
<title>vtkXMLUnstructuredGridWriter::WriteAppendedPieceData (282 samples, 1.83%)</title><rect x="12.3" y="421" width="21.6" height="15.0" fill="rgb(242,118,46)" rx="2" ry="2" />
<text  x="15.30" y="431.5" >v..</text>
</g>
<g >
<title>gcm::Engine::cleanUp (2 samples, 0.01%)</title><rect x="1154.8" y="709" width="0.2" height="15.0" fill="rgb(253,194,15)" rx="2" ry="2" />
<text  x="1157.83" y="719.5" ></text>
</g>
<g >
<title>vtkzlib_deflate (9 samples, 0.06%)</title><rect x="30.5" y="165" width="0.7" height="15.0" fill="rgb(237,38,11)" rx="2" ry="2" />
<text  x="33.54" y="175.5" ></text>
</g>
<g >
<title>kd_insert (476 samples, 3.09%)</title><rect x="151.2" y="613" width="36.5" height="15.0" fill="rgb(250,10,49)" rx="2" ry="2" />
<text  x="154.24" y="623.5" >kd_..</text>
</g>
<g >
<title>vtkXMLWriter::WriteArrayAppendedData (177 samples, 1.15%)</title><rect x="16.9" y="373" width="13.6" height="15.0" fill="rgb(253,136,21)" rx="2" ry="2" />
<text  x="19.90" y="383.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.07%)</title><rect x="10.1" y="741" width="0.8" height="15.0" fill="rgb(223,58,54)" rx="2" ry="2" />
<text  x="13.08" y="751.5" ></text>
</g>
<g >
<title>gcm::TetrMeshSecondOrder::getTetr (141 samples, 0.92%)</title><rect x="925.0" y="517" width="10.8" height="15.0" fill="rgb(254,83,52)" rx="2" ry="2" />
<text  x="928.00" y="527.5" ></text>
</g>
<g >
<title>vtkXMLUnstructuredDataWriter::WriteAPiece (605 samples, 3.93%)</title><rect x="39.5" y="437" width="46.4" height="15.0" fill="rgb(245,161,21)" rx="2" ry="2" />
<text  x="42.50" y="447.5" >vtkX..</text>
</g>
<g >
<title>gcm::RheologyMatrix::getL@plt (5 samples, 0.03%)</title><rect x="939.6" y="613" width="0.4" height="15.0" fill="rgb(212,101,54)" rx="2" ry="2" />
<text  x="942.64" y="623.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getL (35 samples, 0.23%)</title><rect x="895.0" y="597" width="2.6" height="15.0" fill="rgb(245,142,30)" rx="2" ry="2" />
<text  x="897.96" y="607.5" ></text>
</g>
<g >
<title>gcm::CalcNode::calcMainStressComponents (73 samples, 0.47%)</title><rect x="100.4" y="645" width="5.5" height="15.0" fill="rgb(245,161,48)" rx="2" ry="2" />
<text  x="103.35" y="655.5" ></text>
</g>
<g >
<title>gcm::CalcNode::getRheologyMatrix (5 samples, 0.03%)</title><rect x="87.1" y="645" width="0.4" height="15.0" fill="rgb(215,168,14)" rx="2" ry="2" />
<text  x="90.09" y="655.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::findOwnerTetr (347 samples, 2.25%)</title><rect x="910.3" y="565" width="26.6" height="15.0" fill="rgb(245,34,1)" rx="2" ry="2" />
<text  x="913.29" y="575.5" >g..</text>
</g>
<g >
<title>vtkZLibDataCompressor::CompressBuffer (14 samples, 0.09%)</title><rect x="17.0" y="181" width="1.0" height="15.0" fill="rgb(230,179,14)" rx="2" ry="2" />
<text  x="19.97" y="191.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getL@plt (7 samples, 0.05%)</title><rect x="897.6" y="597" width="0.6" height="15.0" fill="rgb(230,152,35)" rx="2" ry="2" />
<text  x="900.64" y="607.5" ></text>
</g>
<g >
<title>gcm::InterpolationFixedAxis::prepare_node (629 samples, 4.08%)</title><rect x="890.6" y="613" width="48.2" height="15.0" fill="rgb(211,33,34)" rx="2" ry="2" />
<text  x="893.59" y="623.5" >gcm:..</text>
</g>
<g >
<title>build_tree (3 samples, 0.02%)</title><rect x="16.0" y="101" width="0.2" height="15.0" fill="rgb(235,70,47)" rx="2" ry="2" />
<text  x="18.98" y="111.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::findOwnerTetr@plt (2 samples, 0.01%)</title><rect x="321.3" y="597" width="0.1" height="15.0" fill="rgb(243,109,1)" rx="2" ry="2" />
<text  x="324.28" y="607.5" ></text>
</g>
<g >
<title>determinant (2 samples, 0.01%)</title><rect x="936.7" y="501" width="0.1" height="15.0" fill="rgb(239,168,14)" rx="2" ry="2" />
<text  x="939.65" y="511.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (352 samples, 2.29%)</title><rect x="58.9" y="261" width="27.0" height="15.0" fill="rgb(217,114,20)" rx="2" ry="2" />
<text  x="61.89" y="271.5" >v..</text>
</g>
<g >
<title>vtkUnstructuredGridBase::InsertNextCell (10 samples, 0.06%)</title><rect x="38.1" y="613" width="0.8" height="15.0" fill="rgb(206,128,54)" rx="2" ry="2" />
<text  x="41.12" y="623.5" ></text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_Impl_For&lt;vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;(anonymous namespace)::DistinctCellTypesWorker, true&gt; &gt; (7 samples, 0.05%)</title><rect x="39.0" y="373" width="0.5" height="15.0" fill="rgb(238,207,52)" rx="2" ry="2" />
<text  x="41.97" y="383.5" ></text>
</g>
<g >
<title>vtkBase64UtilitiesEncodeChar (2 samples, 0.01%)</title><rect x="42.3" y="181" width="0.1" height="15.0" fill="rgb(211,37,52)" rx="2" ry="2" />
<text  x="45.26" y="191.5" ></text>
</g>
<g >
<title>vtkXMLWriter::Write (282 samples, 1.83%)</title><rect x="12.3" y="629" width="21.6" height="15.0" fill="rgb(219,116,7)" rx="2" ry="2" />
<text  x="15.30" y="639.5" >v..</text>
</g>
<g >
<title>gcm::gcm_matrix::get (6 samples, 0.04%)</title><rect x="223.3" y="613" width="0.4" height="15.0" fill="rgb(223,158,38)" rx="2" ry="2" />
<text  x="226.27" y="623.5" ></text>
</g>
<g >
<title>gcm::Node::Node (17 samples, 0.11%)</title><rect x="1129.6" y="549" width="1.3" height="15.0" fill="rgb(242,130,48)" rx="2" ry="2" />
<text  x="1132.61" y="559.5" ></text>
</g>
<g >
<title>gcm::gcm_matrix::get@plt (4 samples, 0.03%)</title><rect x="223.7" y="613" width="0.3" height="15.0" fill="rgb(226,207,12)" rx="2" ry="2" />
<text  x="226.73" y="623.5" ></text>
</g>
<g >
<title>vtkZLibDataCompressor::CompressBuffer (11 samples, 0.07%)</title><rect x="58.0" y="197" width="0.9" height="15.0" fill="rgb(231,206,4)" rx="2" ry="2" />
<text  x="61.05" y="207.5" ></text>
</g>
<g >
<title>std::array&lt;int, 2ul&gt;::operator[] (2 samples, 0.01%)</title><rect x="39.7" y="85" width="0.2" height="15.0" fill="rgb(222,154,15)" rx="2" ry="2" />
<text  x="42.73" y="95.5" ></text>
</g>
<g >
<title>longest_match (31 samples, 0.20%)</title><rect x="31.3" y="85" width="2.4" height="15.0" fill="rgb(254,123,50)" rx="2" ry="2" />
<text  x="34.30" y="95.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::findBorderNodeNormal (511 samples, 3.32%)</title><rect x="898.2" y="597" width="39.1" height="15.0" fill="rgb(214,5,25)" rx="2" ry="2" />
<text  x="901.18" y="607.5" >gcm..</text>
</g>
<g >
<title>vtkArrayDispatch::DispatchByArray&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::ScalarRangeDispatchWrapper&amp;&gt; (13 samples, 0.08%)</title><rect x="39.5" y="293" width="1.0" height="15.0" fill="rgb(235,20,52)" rx="2" ry="2" />
<text  x="42.50" y="303.5" ></text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;double&gt;, double&gt;, true&gt;::For (6 samples, 0.04%)</title><rect x="40.0" y="181" width="0.5" height="15.0" fill="rgb(226,188,39)" rx="2" ry="2" />
<text  x="43.04" y="191.5" ></text>
</g>
<g >
<title>gcm::Engine::doNextStepBeforeStages (1,069 samples, 6.94%)</title><rect x="106.4" y="677" width="81.9" height="15.0" fill="rgb(209,50,45)" rx="2" ry="2" />
<text  x="109.40" y="687.5" >gcm::Engi..</text>
</g>
<g >
<title>vtkStreamingDemandDrivenPipeline::Update (282 samples, 1.83%)</title><rect x="12.3" y="581" width="21.6" height="15.0" fill="rgb(218,138,42)" rx="2" ry="2" />
<text  x="15.30" y="591.5" >v..</text>
</g>
<g >
<title>gcm::gcm_matrix::get (133 samples, 0.86%)</title><rect x="1094.1" y="629" width="10.2" height="15.0" fill="rgb(236,129,22)" rx="2" ry="2" />
<text  x="1097.13" y="639.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::DispatchByArray&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (177 samples, 1.15%)</title><rect x="16.9" y="325" width="13.6" height="15.0" fill="rgb(218,0,25)" rx="2" ry="2" />
<text  x="19.90" y="335.5" ></text>
</g>
<g >
<title>vtkXMLWriterHelper::WriteBinaryDataBlock (209 samples, 1.36%)</title><rect x="42.0" y="277" width="16.0" height="15.0" fill="rgb(205,68,28)" rx="2" ry="2" />
<text  x="45.03" y="287.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataInternal (50 samples, 0.32%)</title><rect x="12.4" y="341" width="3.8" height="15.0" fill="rgb(254,23,35)" rx="2" ry="2" />
<text  x="15.38" y="351.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isUsed@plt (2 samples, 0.01%)</title><rect x="205.4" y="645" width="0.2" height="15.0" fill="rgb(228,173,27)" rx="2" ry="2" />
<text  x="208.41" y="655.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isUsed (3 samples, 0.02%)</title><rect x="88.2" y="645" width="0.2" height="15.0" fill="rgb(245,42,4)" rx="2" ry="2" />
<text  x="91.17" y="655.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.03%)</title><rect x="187.7" y="613" width="0.3" height="15.0" fill="rgb(211,78,18)" rx="2" ry="2" />
<text  x="190.71" y="623.5" ></text>
</g>
<g >
<title>vtkXMLUnstructuredDataWriter::WriteCellsAppendedDataWorker (35 samples, 0.23%)</title><rect x="31.2" y="389" width="2.7" height="15.0" fill="rgb(223,74,39)" rx="2" ry="2" />
<text  x="34.23" y="399.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::find_border_elem_normal (2 samples, 0.01%)</title><rect x="937.3" y="597" width="0.2" height="15.0" fill="rgb(226,100,26)" rx="2" ry="2" />
<text  x="940.34" y="607.5" ></text>
</g>
<g >
<title>gcm::Node::Node (3 samples, 0.02%)</title><rect x="92.1" y="581" width="0.2" height="15.0" fill="rgb(223,116,18)" rx="2" ry="2" />
<text  x="95.07" y="591.5" ></text>
</g>
<g >
<title>gsl_matrix_set (29 samples, 0.19%)</title><rect x="224.3" y="613" width="2.2" height="15.0" fill="rgb(249,208,40)" rx="2" ry="2" />
<text  x="227.27" y="623.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (35 samples, 0.23%)</title><rect x="31.2" y="309" width="2.7" height="15.0" fill="rgb(221,0,34)" rx="2" ry="2" />
<text  x="34.23" y="319.5" ></text>
</g>
<g >
<title>build_tree (2 samples, 0.01%)</title><rect x="58.7" y="117" width="0.1" height="15.0" fill="rgb(207,100,40)" rx="2" ry="2" />
<text  x="61.66" y="127.5" ></text>
</g>
<g >
<title>vtkzlib_deflate (14 samples, 0.09%)</title><rect x="17.0" y="149" width="1.0" height="15.0" fill="rgb(225,51,22)" rx="2" ry="2" />
<text  x="19.97" y="159.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="1153.4" y="645" width="0.1" height="15.0" fill="rgb(235,174,36)" rx="2" ry="2" />
<text  x="1156.37" y="655.5" ></text>
</g>
<g >
<title>vtkzlib_adler32_z (2 samples, 0.01%)</title><rect x="20.0" y="101" width="0.2" height="15.0" fill="rgb(216,169,38)" rx="2" ry="2" />
<text  x="23.04" y="111.5" ></text>
</g>
<g >
<title>gcm::InterpolationFixedAxis::__doNextPartStep (12,131 samples, 78.78%)</title><rect x="206.3" y="645" width="929.7" height="15.0" fill="rgb(217,176,24)" rx="2" ry="2" />
<text  x="209.33" y="655.5" >gcm::InterpolationFixedAxis::__doNextPartStep</text>
</g>
<g >
<title>solvePolynomialThirdOrder (30 samples, 0.19%)</title><rect x="103.6" y="629" width="2.3" height="15.0" fill="rgb(247,178,12)" rx="2" ry="2" />
<text  x="106.65" y="639.5" ></text>
</g>
<g >
<title>vtkExecutive::CallAlgorithm (282 samples, 1.83%)</title><rect x="12.3" y="469" width="21.6" height="15.0" fill="rgb(246,100,39)" rx="2" ry="2" />
<text  x="15.30" y="479.5" >v..</text>
</g>
<g >
<title>gcm::VTK2SnapshotWriter::dumpMeshSpecificData (8 samples, 0.05%)</title><rect x="11.6" y="629" width="0.6" height="15.0" fill="rgb(208,226,31)" rx="2" ry="2" />
<text  x="14.61" y="639.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WritePointDataAppendedData (186 samples, 1.21%)</title><rect x="16.2" y="389" width="14.3" height="15.0" fill="rgb(242,8,32)" rx="2" ry="2" />
<text  x="19.21" y="399.5" ></text>
</g>
<g >
<title>gcm::Node::~Node (9 samples, 0.06%)</title><rect x="1151.8" y="645" width="0.7" height="15.0" fill="rgb(250,29,53)" rx="2" ry="2" />
<text  x="1154.84" y="655.5" ></text>
</g>
<g >
<title>gcm::CalcNode::getRheologyMatrix (5 samples, 0.03%)</title><rect x="107.9" y="613" width="0.3" height="15.0" fill="rgb(253,64,34)" rx="2" ry="2" />
<text  x="110.86" y="623.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isLocal (2 samples, 0.01%)</title><rect x="119.7" y="645" width="0.1" height="15.0" fill="rgb(220,79,24)" rx="2" ry="2" />
<text  x="122.66" y="655.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNode (29 samples, 0.19%)</title><rect x="922.8" y="517" width="2.2" height="15.0" fill="rgb(207,9,29)" rx="2" ry="2" />
<text  x="925.78" y="527.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="1170.3" y="725" width="0.2" height="15.0" fill="rgb(210,104,15)" rx="2" ry="2" />
<text  x="1173.31" y="735.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WritePointsAppendedData (10 samples, 0.06%)</title><rect x="30.5" y="389" width="0.7" height="15.0" fill="rgb(220,201,15)" rx="2" ry="2" />
<text  x="33.46" y="399.5" ></text>
</g>
<g >
<title>tetrVolume (103 samples, 0.67%)</title><rect x="877.8" y="565" width="7.9" height="15.0" fill="rgb(206,200,48)" rx="2" ry="2" />
<text  x="880.80" y="575.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNewNode (5 samples, 0.03%)</title><rect x="1153.7" y="661" width="0.4" height="15.0" fill="rgb(245,154,11)" rx="2" ry="2" />
<text  x="1156.68" y="671.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNode (73 samples, 0.47%)</title><rect x="415.2" y="565" width="5.6" height="15.0" fill="rgb(234,167,28)" rx="2" ry="2" />
<text  x="418.16" y="575.5" ></text>
</g>
<g >
<title>vtkZLibDataCompressor::CompressBuffer (348 samples, 2.26%)</title><rect x="59.2" y="149" width="26.7" height="15.0" fill="rgb(221,110,39)" rx="2" ry="2" />
<text  x="62.20" y="159.5" >v..</text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (12 samples, 0.08%)</title><rect x="1188.8" y="757" width="0.9" height="15.0" fill="rgb(205,14,34)" rx="2" ry="2" />
<text  x="1191.77" y="767.5" ></text>
</g>
<g >
<title>vtkDataArray::GetRange (9 samples, 0.06%)</title><rect x="16.2" y="373" width="0.7" height="15.0" fill="rgb(227,177,44)" rx="2" ry="2" />
<text  x="19.21" y="383.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNewNode (137 samples, 0.89%)</title><rect x="1136.9" y="645" width="10.5" height="15.0" fill="rgb(242,64,40)" rx="2" ry="2" />
<text  x="1139.89" y="655.5" ></text>
</g>
<g >
<title>determinant@plt (16 samples, 0.10%)</title><rect x="868.4" y="565" width="1.3" height="15.0" fill="rgb(209,66,6)" rx="2" ry="2" />
<text  x="871.45" y="575.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5 samples, 0.03%)</title><rect x="140.3" y="485" width="0.4" height="15.0" fill="rgb(235,153,38)" rx="2" ry="2" />
<text  x="143.28" y="495.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (227 samples, 1.47%)</title><rect x="40.7" y="293" width="17.3" height="15.0" fill="rgb(215,115,53)" rx="2" ry="2" />
<text  x="43.65" y="303.5" ></text>
</g>
<g >
<title>vtkzlib_compress2 (204 samples, 1.32%)</title><rect x="42.4" y="197" width="15.6" height="15.0" fill="rgb(223,89,40)" rx="2" ry="2" />
<text  x="45.42" y="207.5" ></text>
</g>
<g >
<title>vectorProduct (2 samples, 0.01%)</title><rect x="905.3" y="565" width="0.2" height="15.0" fill="rgb(224,164,48)" rx="2" ry="2" />
<text  x="908.31" y="575.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::ScalarRangeDispatchWrapper&amp;&gt; (3 samples, 0.02%)</title><rect x="16.2" y="245" width="0.2" height="15.0" fill="rgb(206,146,30)" rx="2" ry="2" />
<text  x="19.21" y="255.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNode (67 samples, 0.44%)</title><rect x="313.0" y="597" width="5.1" height="15.0" fill="rgb(229,179,23)" rx="2" ry="2" />
<text  x="316.01" y="607.5" ></text>
</g>
<g >
<title>vtkDemandDrivenPipeline::ExecuteData (612 samples, 3.97%)</title><rect x="39.0" y="485" width="46.9" height="15.0" fill="rgb(245,140,12)" rx="2" ry="2" />
<text  x="41.97" y="495.5" >vtkD..</text>
</g>
<g >
<title>gcm::SnapshotWriter::dump[abi:cxx11] (677 samples, 4.40%)</title><rect x="34.0" y="661" width="51.9" height="15.0" fill="rgb(250,85,39)" rx="2" ry="2" />
<text  x="36.99" y="671.5" >gcm::..</text>
</g>
<g >
<title>gcm::TetrMeshSecondOrder::getTetr (3 samples, 0.02%)</title><rect x="35.0" y="549" width="0.2" height="15.0" fill="rgb(231,178,47)" rx="2" ry="2" />
<text  x="37.98" y="559.5" ></text>
</g>
<g >
<title>gcm::Engine::getVolumeCalculator (15 samples, 0.10%)</title><rect x="248.2" y="629" width="1.1" height="15.0" fill="rgb(218,91,10)" rx="2" ry="2" />
<text  x="251.18" y="639.5" ></text>
</g>
<g >
<title>gcm::TetrMeshSecondOrder::getTetr2 (132 samples, 0.86%)</title><rect x="723.8" y="581" width="10.1" height="15.0" fill="rgb(217,144,33)" rx="2" ry="2" />
<text  x="726.76" y="591.5" ></text>
</g>
<g >
<title>longest_match (7 samples, 0.05%)</title><rect x="17.4" y="117" width="0.6" height="15.0" fill="rgb(212,149,29)" rx="2" ry="2" />
<text  x="20.43" y="127.5" ></text>
</g>
<g >
<title>vtkBase64OutputStream::EncodeTriplet (4 samples, 0.03%)</title><rect x="58.9" y="149" width="0.3" height="15.0" fill="rgb(214,202,37)" rx="2" ry="2" />
<text  x="61.89" y="159.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryData (352 samples, 2.29%)</title><rect x="58.9" y="357" width="27.0" height="15.0" fill="rgb(215,115,10)" rx="2" ry="2" />
<text  x="61.89" y="367.5" >v..</text>
</g>
<g >
<title>gcm::Mesh::getNode (479 samples, 3.11%)</title><rect x="525.7" y="549" width="36.7" height="15.0" fill="rgb(210,185,54)" rx="2" ry="2" />
<text  x="528.74" y="559.5" >gcm..</text>
</g>
<g >
<title>_int_free (4 samples, 0.03%)</title><rect x="144.3" y="453" width="0.3" height="15.0" fill="rgb(246,144,47)" rx="2" ry="2" />
<text  x="147.26" y="463.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isInner (3 samples, 0.02%)</title><rect x="188.4" y="661" width="0.2" height="15.0" fill="rgb(216,115,1)" rx="2" ry="2" />
<text  x="191.40" y="671.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteCompressionBlock (209 samples, 1.36%)</title><rect x="42.0" y="245" width="16.0" height="15.0" fill="rgb(237,0,0)" rx="2" ry="2" />
<text  x="45.03" y="255.5" ></text>
</g>
<g >
<title>gcm::CalcNode::operator= (12 samples, 0.08%)</title><rect x="253.4" y="613" width="0.9" height="15.0" fill="rgb(238,14,7)" rx="2" ry="2" />
<text  x="256.39" y="623.5" ></text>
</g>
<g >
<title>vtkCellArray::Visit&lt;vtkCellArray_detail::InsertNextCellImpl, long long, long long*, void&gt; (5 samples, 0.03%)</title><rect x="38.4" y="565" width="0.4" height="15.0" fill="rgb(221,208,43)" rx="2" ry="2" />
<text  x="41.43" y="575.5" ></text>
</g>
<g >
<title>vtkSMPTools::For&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;double&gt;, double&gt; &gt; (5 samples, 0.03%)</title><rect x="16.4" y="213" width="0.4" height="15.0" fill="rgb(237,144,15)" rx="2" ry="2" />
<text  x="19.44" y="223.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (9 samples, 0.06%)</title><rect x="30.5" y="309" width="0.7" height="15.0" fill="rgb(215,141,51)" rx="2" ry="2" />
<text  x="33.54" y="319.5" ></text>
</g>
<g >
<title>read_buf (4 samples, 0.03%)</title><rect x="45.1" y="133" width="0.3" height="15.0" fill="rgb(217,76,16)" rx="2" ry="2" />
<text  x="48.10" y="143.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getU (239 samples, 1.55%)</title><rect x="1026.9" y="613" width="18.3" height="15.0" fill="rgb(244,125,4)" rx="2" ry="2" />
<text  x="1029.92" y="623.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNode (648 samples, 4.21%)</title><rect x="344.9" y="581" width="49.6" height="15.0" fill="rgb(249,36,20)" rx="2" ry="2" />
<text  x="347.89" y="591.5" >gcm::..</text>
</g>
<g >
<title>compress_block (12 samples, 0.08%)</title><rect x="57.1" y="133" width="0.9" height="15.0" fill="rgb(218,20,46)" rx="2" ry="2" />
<text  x="60.13" y="143.5" ></text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_Impl_For&lt;vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;int&gt;, int&gt;, true&gt; &gt; (7 samples, 0.05%)</title><rect x="39.5" y="133" width="0.5" height="15.0" fill="rgb(249,32,49)" rx="2" ry="2" />
<text  x="42.50" y="143.5" ></text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;double&gt;, double&gt;, true&gt;::Execute (5 samples, 0.03%)</title><rect x="16.4" y="149" width="0.4" height="15.0" fill="rgb(247,177,43)" rx="2" ry="2" />
<text  x="19.44" y="159.5" ></text>
</g>
<g >
<title>vtkDataCompressor::Compress (48 samples, 0.31%)</title><rect x="12.5" y="197" width="3.7" height="15.0" fill="rgb(243,194,44)" rx="2" ry="2" />
<text  x="15.53" y="207.5" ></text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_Impl_For&lt;vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;double&gt;, double&gt;, true&gt; &gt; (6 samples, 0.04%)</title><rect x="40.0" y="165" width="0.5" height="15.0" fill="rgb(206,135,29)" rx="2" ry="2" />
<text  x="43.04" y="175.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getMaxEigenvalue (104 samples, 0.68%)</title><rect x="110.2" y="613" width="7.9" height="15.0" fill="rgb(221,174,37)" rx="2" ry="2" />
<text  x="113.16" y="623.5" ></text>
</g>
<g >
<title>determinant (103 samples, 0.67%)</title><rect x="713.4" y="533" width="7.9" height="15.0" fill="rgb(215,77,29)" rx="2" ry="2" />
<text  x="716.42" y="543.5" ></text>
</g>
<g >
<title>pointInTetr@plt (6 samples, 0.04%)</title><rect x="723.2" y="565" width="0.5" height="15.0" fill="rgb(245,105,35)" rx="2" ry="2" />
<text  x="726.23" y="575.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::checkCharactCache (14 samples, 0.09%)</title><rect x="910.5" y="549" width="1.1" height="15.0" fill="rgb(234,149,1)" rx="2" ry="2" />
<text  x="913.52" y="559.5" ></text>
</g>
<g >
<title>gsl_linalg_LU_solve (5 samples, 0.03%)</title><rect x="1164.9" y="741" width="0.4" height="15.0" fill="rgb(236,175,4)" rx="2" ry="2" />
<text  x="1167.94" y="751.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (35 samples, 0.23%)</title><rect x="31.2" y="245" width="2.7" height="15.0" fill="rgb(224,2,42)" rx="2" ry="2" />
<text  x="34.23" y="255.5" ></text>
</g>
<g >
<title>gcm::CalcNode::getMaterialId (2 samples, 0.01%)</title><rect x="869.7" y="565" width="0.1" height="15.0" fill="rgb(222,153,50)" rx="2" ry="2" />
<text  x="872.67" y="575.5" ></text>
</g>
<g >
<title>gcm::CalcNode::operator=@plt (10 samples, 0.06%)</title><rect x="254.3" y="613" width="0.8" height="15.0" fill="rgb(233,119,41)" rx="2" ry="2" />
<text  x="257.31" y="623.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryData (35 samples, 0.23%)</title><rect x="31.2" y="357" width="2.7" height="15.0" fill="rgb(245,70,24)" rx="2" ry="2" />
<text  x="34.23" y="367.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getL (3 samples, 0.02%)</title><rect x="116.8" y="581" width="0.2" height="15.0" fill="rgb(238,147,32)" rx="2" ry="2" />
<text  x="119.75" y="591.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataInternal (11 samples, 0.07%)</title><rect x="58.0" y="341" width="0.9" height="15.0" fill="rgb(243,192,9)" rx="2" ry="2" />
<text  x="61.05" y="351.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getL@plt (10 samples, 0.06%)</title><rect x="117.0" y="597" width="0.7" height="15.0" fill="rgb(231,109,23)" rx="2" ry="2" />
<text  x="119.98" y="607.5" ></text>
</g>
<g >
<title>gcm::Mesh::clearNodesState (11 samples, 0.07%)</title><rect x="1136.1" y="645" width="0.8" height="15.0" fill="rgb(239,186,18)" rx="2" ry="2" />
<text  x="1139.05" y="655.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataInternal (177 samples, 1.15%)</title><rect x="16.9" y="341" width="13.6" height="15.0" fill="rgb(221,192,10)" rx="2" ry="2" />
<text  x="19.90" y="351.5" ></text>
</g>
<g >
<title>gcm::linal::rotate (91 samples, 0.59%)</title><rect x="93.2" y="613" width="7.0" height="15.0" fill="rgb(221,26,34)" rx="2" ry="2" />
<text  x="96.22" y="623.5" ></text>
</g>
<g >
<title>gcm::Material::getRho (3 samples, 0.02%)</title><rect x="877.0" y="565" width="0.3" height="15.0" fill="rgb(230,49,29)" rx="2" ry="2" />
<text  x="880.03" y="575.5" ></text>
</g>
<g >
<title>gcm::gcm_matrix::get (150 samples, 0.97%)</title><rect x="1082.6" y="613" width="11.5" height="15.0" fill="rgb(229,220,48)" rx="2" ry="2" />
<text  x="1085.64" y="623.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::checkCharactCache (2 samples, 0.01%)</title><rect x="11.5" y="565" width="0.1" height="15.0" fill="rgb(243,95,42)" rx="2" ry="2" />
<text  x="14.46" y="575.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNode (18 samples, 0.12%)</title><rect x="136.1" y="629" width="1.3" height="15.0" fill="rgb(243,39,50)" rx="2" ry="2" />
<text  x="139.06" y="639.5" ></text>
</g>
<g >
<title>gcm::FailureModel::prepare_node (138 samples, 0.90%)</title><rect x="89.6" y="629" width="10.6" height="15.0" fill="rgb(241,208,40)" rx="2" ry="2" />
<text  x="92.62" y="639.5" ></text>
</g>
<g >
<title>all (15,398 samples, 100%)</title><rect x="10.0" y="789" width="1180.0" height="15.0" fill="rgb(245,33,36)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.02%)</title><rect x="150.3" y="389" width="0.2" height="15.0" fill="rgb(214,192,49)" rx="2" ry="2" />
<text  x="153.32" y="399.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (2 samples, 0.01%)</title><rect x="10.4" y="725" width="0.1" height="15.0" fill="rgb(234,19,38)" rx="2" ry="2" />
<text  x="13.38" y="735.5" ></text>
</g>
<g >
<title>longest_match (149 samples, 0.97%)</title><rect x="45.4" y="149" width="11.4" height="15.0" fill="rgb(233,92,33)" rx="2" ry="2" />
<text  x="48.40" y="159.5" ></text>
</g>
<g >
<title>malloc (34 samples, 0.22%)</title><rect x="1186.2" y="757" width="2.6" height="15.0" fill="rgb(249,83,4)" rx="2" ry="2" />
<text  x="1189.17" y="767.5" ></text>
</g>
<g >
<title>gcm::Body::~Body (2 samples, 0.01%)</title><rect x="1154.8" y="677" width="0.2" height="15.0" fill="rgb(241,185,33)" rx="2" ry="2" />
<text  x="1157.83" y="687.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (11 samples, 0.07%)</title><rect x="58.0" y="277" width="0.9" height="15.0" fill="rgb(222,172,16)" rx="2" ry="2" />
<text  x="61.05" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, unsigned char, std::_Identity&lt;unsigned char&gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;unsigned char&gt; &gt;::_M_get_insert_unique_pos (2 samples, 0.01%)</title><rect x="39.0" y="309" width="0.2" height="15.0" fill="rgb(217,209,37)" rx="2" ry="2" />
<text  x="42.04" y="319.5" ></text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;int&gt;, int&gt;, true&gt;::Execute (7 samples, 0.05%)</title><rect x="39.5" y="117" width="0.5" height="15.0" fill="rgb(251,115,36)" rx="2" ry="2" />
<text  x="42.50" y="127.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataInternal (35 samples, 0.23%)</title><rect x="31.2" y="341" width="2.7" height="15.0" fill="rgb(226,91,49)" rx="2" ry="2" />
<text  x="34.23" y="351.5" ></text>
</g>
<g >
<title>vtkStreamingDemandDrivenPipeline::Update (612 samples, 3.97%)</title><rect x="39.0" y="581" width="46.9" height="15.0" fill="rgb(221,104,43)" rx="2" ry="2" />
<text  x="41.97" y="591.5" >vtkS..</text>
</g>
<g >
<title>vtkXMLWriter::WriteArrayAppendedData (352 samples, 2.29%)</title><rect x="58.9" y="373" width="27.0" height="15.0" fill="rgb(209,167,33)" rx="2" ry="2" />
<text  x="61.89" y="383.5" >v..</text>
</g>
<g >
<title>gcm::CalcNode::CalcNode (249 samples, 1.62%)</title><rect x="1116.4" y="613" width="19.0" height="15.0" fill="rgb(238,56,16)" rx="2" ry="2" />
<text  x="1119.36" y="623.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::ScalarRangeDispatchWrapper&amp;&gt; (3 samples, 0.02%)</title><rect x="16.2" y="229" width="0.2" height="15.0" fill="rgb(237,59,45)" rx="2" ry="2" />
<text  x="19.21" y="239.5" ></text>
</g>
<g >
<title>vtkSMPTools::For&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;double&gt;, double&gt; &gt; (6 samples, 0.04%)</title><rect x="40.0" y="213" width="0.5" height="15.0" fill="rgb(247,153,9)" rx="2" ry="2" />
<text  x="43.04" y="223.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getL (7 samples, 0.05%)</title><rect x="939.1" y="613" width="0.5" height="15.0" fill="rgb(206,141,17)" rx="2" ry="2" />
<text  x="942.10" y="623.5" ></text>
</g>
<g >
<title>vtkzlib_deflate (346 samples, 2.25%)</title><rect x="59.2" y="117" width="26.5" height="15.0" fill="rgb(231,45,47)" rx="2" ry="2" />
<text  x="62.20" y="127.5" >v..</text>
</g>
<g >
<title>gcm::CalcNode::isUsed (6 samples, 0.04%)</title><rect x="1136.4" y="629" width="0.5" height="15.0" fill="rgb(221,126,0)" rx="2" ry="2" />
<text  x="1139.43" y="639.5" ></text>
</g>
<g >
<title>gcm::ICalcNode::ICalcNode (32 samples, 0.21%)</title><rect x="1128.5" y="565" width="2.4" height="15.0" fill="rgb(239,143,1)" rx="2" ry="2" />
<text  x="1131.46" y="575.5" ></text>
</g>
<g >
<title>vtkDataArrayPrivate::ComputeScalarRange&lt;1&gt;::operator (5 samples, 0.03%)</title><rect x="16.4" y="229" width="0.4" height="15.0" fill="rgb(225,73,49)" rx="2" ry="2" />
<text  x="19.44" y="239.5" ></text>
</g>
<g >
<title>vtkzlib__tr_flush_block (5 samples, 0.03%)</title><rect x="30.1" y="149" width="0.4" height="15.0" fill="rgb(210,13,26)" rx="2" ry="2" />
<text  x="33.08" y="159.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getU1@plt (73 samples, 0.47%)</title><rect x="1069.3" y="613" width="5.6" height="15.0" fill="rgb(206,111,28)" rx="2" ry="2" />
<text  x="1072.30" y="623.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNewNode (26 samples, 0.17%)</title><rect x="191.6" y="645" width="2.0" height="15.0" fill="rgb(206,134,13)" rx="2" ry="2" />
<text  x="194.62" y="655.5" ></text>
</g>
<g >
<title>scalarProduct@plt (4 samples, 0.03%)</title><rect x="886.1" y="581" width="0.4" height="15.0" fill="rgb(232,63,19)" rx="2" ry="2" />
<text  x="889.15" y="591.5" ></text>
</g>
<g >
<title>gsl_vector_set (3 samples, 0.02%)</title><rect x="227.0" y="613" width="0.3" height="15.0" fill="rgb(246,62,19)" rx="2" ry="2" />
<text  x="230.03" y="623.5" ></text>
</g>
<g >
<title>gcm::linal::getZRotationMatrix (12 samples, 0.08%)</title><rect x="99.2" y="597" width="0.9" height="15.0" fill="rgb(235,159,10)" rx="2" ry="2" />
<text  x="102.20" y="607.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isInner@plt (2 samples, 0.01%)</title><rect x="188.6" y="661" width="0.2" height="15.0" fill="rgb(232,86,17)" rx="2" ry="2" />
<text  x="191.63" y="671.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::find_border_elem_normal (49 samples, 0.32%)</title><rect x="906.2" y="581" width="3.8" height="15.0" fill="rgb(252,147,20)" rx="2" ry="2" />
<text  x="909.23" y="591.5" ></text>
</g>
<g >
<title>vtkDataArrayPrivate::DoComputeScalarRange&lt;vtkAOSDataArrayTemplate&lt;double&gt;, double, vtkDataArrayPrivate::AllValues&gt; (5 samples, 0.03%)</title><rect x="16.4" y="245" width="0.4" height="15.0" fill="rgb(211,20,23)" rx="2" ry="2" />
<text  x="19.44" y="255.5" ></text>
</g>
<g >
<title>gsl_vector_memcpy (2 samples, 0.01%)</title><rect x="1165.9" y="741" width="0.2" height="15.0" fill="rgb(229,205,40)" rx="2" ry="2" />
<text  x="1168.94" y="751.5" ></text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;int&gt;, int&gt;, true&gt;::For (7 samples, 0.05%)</title><rect x="39.5" y="149" width="0.5" height="15.0" fill="rgb(243,122,2)" rx="2" ry="2" />
<text  x="42.50" y="159.5" ></text>
</g>
<g >
<title>gcm::gcm_matrix::get (4 samples, 0.03%)</title><rect x="940.2" y="613" width="0.3" height="15.0" fill="rgb(216,158,4)" rx="2" ry="2" />
<text  x="943.18" y="623.5" ></text>
</g>
<g >
<title>vtkDemandDrivenPipeline::UpdateData (612 samples, 3.97%)</title><rect x="39.0" y="549" width="46.9" height="15.0" fill="rgb(221,70,2)" rx="2" ry="2" />
<text  x="41.97" y="559.5" >vtkD..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (7 samples, 0.05%)</title><rect x="147.4" y="437" width="0.5" height="15.0" fill="rgb(232,133,49)" rx="2" ry="2" />
<text  x="150.40" y="447.5" ></text>
</g>
<g >
<title>gcm::Mesh::defaultNextPartStep (12,512 samples, 81.26%)</title><rect x="194.8" y="661" width="958.9" height="15.0" fill="rgb(223,199,21)" rx="2" ry="2" />
<text  x="197.84" y="671.5" >gcm::Mesh::defaultNextPartStep</text>
</g>
<g >
<title>malloc (3 samples, 0.02%)</title><rect x="1152.9" y="645" width="0.2" height="15.0" fill="rgb(222,164,4)" rx="2" ry="2" />
<text  x="1155.91" y="655.5" ></text>
</g>
<g >
<title>vtkzlib_compress2 (159 samples, 1.03%)</title><rect x="18.3" y="197" width="12.2" height="15.0" fill="rgb(249,52,40)" rx="2" ry="2" />
<text  x="21.28" y="207.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::getRecommendedTimeStep (170 samples, 1.10%)</title><rect x="106.5" y="645" width="13.0" height="15.0" fill="rgb(238,66,47)" rx="2" ry="2" />
<text  x="109.48" y="655.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="1153.1" y="645" width="0.2" height="15.0" fill="rgb(214,178,27)" rx="2" ry="2" />
<text  x="1156.14" y="655.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="91.0" y="597" width="0.2" height="15.0" fill="rgb(220,35,2)" rx="2" ry="2" />
<text  x="94.00" y="607.5" ></text>
</g>
<g >
<title>gcm::TetrSecondOrderMinMaxInterpolator::interpolate (3 samples, 0.02%)</title><rect x="889.7" y="597" width="0.2" height="15.0" fill="rgb(252,143,48)" rx="2" ry="2" />
<text  x="892.67" y="607.5" ></text>
</g>
<g >
<title>vtkSMPTools::For&lt;(anonymous namespace)::DistinctCellTypesWorker&gt; (7 samples, 0.05%)</title><rect x="39.0" y="405" width="0.5" height="15.0" fill="rgb(213,60,16)" rx="2" ry="2" />
<text  x="41.97" y="415.5" ></text>
</g>
<g >
<title>memcmp@plt (2 samples, 0.01%)</title><rect x="1113.3" y="629" width="0.1" height="15.0" fill="rgb(212,140,30)" rx="2" ry="2" />
<text  x="1116.29" y="639.5" ></text>
</g>
<g >
<title>compress_block (2 samples, 0.01%)</title><rect x="33.8" y="69" width="0.1" height="15.0" fill="rgb(235,197,49)" rx="2" ry="2" />
<text  x="36.76" y="79.5" ></text>
</g>
<g >
<title>gcm::gcm_matrix::get@plt (10 samples, 0.06%)</title><rect x="134.1" y="629" width="0.8" height="15.0" fill="rgb(238,214,54)" rx="2" ry="2" />
<text  x="137.15" y="639.5" ></text>
</g>
<g >
<title>determinant@plt (61 samples, 0.40%)</title><rect x="521.1" y="549" width="4.6" height="15.0" fill="rgb(238,60,44)" rx="2" ry="2" />
<text  x="524.07" y="559.5" ></text>
</g>
<g >
<title>vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;int&gt;, int&gt;::operator (2 samples, 0.01%)</title><rect x="16.3" y="101" width="0.1" height="15.0" fill="rgb(239,160,35)" rx="2" ry="2" />
<text  x="19.28" y="111.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getL (39 samples, 0.25%)</title><rect x="114.0" y="597" width="3.0" height="15.0" fill="rgb(226,70,39)" rx="2" ry="2" />
<text  x="116.99" y="607.5" ></text>
</g>
<g >
<title>__ieee754_acos_sse2 (33 samples, 0.21%)</title><rect x="100.8" y="629" width="2.5" height="15.0" fill="rgb(233,41,5)" rx="2" ry="2" />
<text  x="103.81" y="639.5" ></text>
</g>
<g >
<title>gcm::TetrMeshSecondOrder::getTriangle (2 samples, 0.01%)</title><rect x="937.0" y="581" width="0.1" height="15.0" fill="rgb(251,76,35)" rx="2" ry="2" />
<text  x="939.96" y="591.5" ></text>
</g>
<g >
<title>clear_rec (15 samples, 0.10%)</title><rect x="149.9" y="405" width="1.2" height="15.0" fill="rgb(211,146,41)" rx="2" ry="2" />
<text  x="152.93" y="415.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (35 samples, 0.23%)</title><rect x="31.2" y="229" width="2.7" height="15.0" fill="rgb(205,153,2)" rx="2" ry="2" />
<text  x="34.23" y="239.5" ></text>
</g>
<g >
<title>gcm::gcm_matrix::get (9 samples, 0.06%)</title><rect x="132.6" y="613" width="0.7" height="15.0" fill="rgb(254,214,34)" rx="2" ry="2" />
<text  x="135.61" y="623.5" ></text>
</g>
<g >
<title>clear_rec (179 samples, 1.16%)</title><rect x="137.4" y="565" width="13.8" height="15.0" fill="rgb(253,114,18)" rx="2" ry="2" />
<text  x="140.44" y="575.5" ></text>
</g>
<g >
<title>gcm::CalcNode::~CalcNode (205 samples, 1.33%)</title><rect x="232.4" y="629" width="15.7" height="15.0" fill="rgb(251,156,22)" rx="2" ry="2" />
<text  x="235.39" y="639.5" ></text>
</g>
<g >
<title>main (14,929 samples, 96.95%)</title><rect x="10.9" y="725" width="1144.1" height="15.0" fill="rgb(233,85,9)" rx="2" ry="2" />
<text  x="13.92" y="735.5" >main</text>
</g>
<g >
<title>gcm::CalcNode::isUsed (3 samples, 0.02%)</title><rect x="87.7" y="645" width="0.2" height="15.0" fill="rgb(250,220,17)" rx="2" ry="2" />
<text  x="90.71" y="655.5" ></text>
</g>
<g >
<title>vtkExecutive::CallAlgorithm (612 samples, 3.97%)</title><rect x="39.0" y="469" width="46.9" height="15.0" fill="rgb(207,163,39)" rx="2" ry="2" />
<text  x="41.97" y="479.5" >vtkE..</text>
</g>
<g >
<title>pqdownheap (3 samples, 0.02%)</title><rect x="56.9" y="117" width="0.2" height="15.0" fill="rgb(251,110,35)" rx="2" ry="2" />
<text  x="59.90" y="127.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteCompressionBlock (162 samples, 1.05%)</title><rect x="18.0" y="245" width="12.5" height="15.0" fill="rgb(244,53,4)" rx="2" ry="2" />
<text  x="21.05" y="255.5" ></text>
</g>
<g >
<title>cos@plt (2 samples, 0.01%)</title><rect x="103.5" y="629" width="0.1" height="15.0" fill="rgb(220,102,43)" rx="2" ry="2" />
<text  x="106.49" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;int const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;int, false&gt; &gt; &gt; &gt; (10 samples, 0.06%)</title><rect x="721.5" y="549" width="0.8" height="15.0" fill="rgb(246,174,23)" rx="2" ry="2" />
<text  x="724.54" y="559.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::DispatchByArray&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (227 samples, 1.47%)</title><rect x="40.7" y="325" width="17.3" height="15.0" fill="rgb(218,48,49)" rx="2" ry="2" />
<text  x="43.65" y="335.5" ></text>
</g>
<g >
<title>vtkDemandDrivenPipeline::ProcessRequest (282 samples, 1.83%)</title><rect x="12.3" y="517" width="21.6" height="15.0" fill="rgb(221,200,28)" rx="2" ry="2" />
<text  x="15.30" y="527.5" >v..</text>
</g>
<g >
<title>vtkzlib__tr_flush_block (16 samples, 0.10%)</title><rect x="56.8" y="149" width="1.2" height="15.0" fill="rgb(236,14,43)" rx="2" ry="2" />
<text  x="59.82" y="159.5" ></text>
</g>
<g >
<title>vtkAOSDataArrayTemplate&lt;long long&gt;::SetValue (2 samples, 0.01%)</title><rect x="38.6" y="517" width="0.1" height="15.0" fill="rgb(213,127,23)" rx="2" ry="2" />
<text  x="41.58" y="527.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isInner (3 samples, 0.02%)</title><rect x="203.4" y="645" width="0.3" height="15.0" fill="rgb(210,119,33)" rx="2" ry="2" />
<text  x="206.42" y="655.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (50 samples, 0.32%)</title><rect x="12.4" y="277" width="3.8" height="15.0" fill="rgb(219,77,15)" rx="2" ry="2" />
<text  x="15.38" y="287.5" ></text>
</g>
<g >
<title>build_tree (2 samples, 0.01%)</title><rect x="30.8" y="117" width="0.2" height="15.0" fill="rgb(225,136,22)" rx="2" ry="2" />
<text  x="33.84" y="127.5" ></text>
</g>
<g >
<title>gcm::Engine::getMaterial@plt (3 samples, 0.02%)</title><rect x="92.9" y="613" width="0.2" height="15.0" fill="rgb(219,117,50)" rx="2" ry="2" />
<text  x="95.92" y="623.5" ></text>
</g>
<g >
<title>vtkBase64OutputStream::Write (3 samples, 0.02%)</title><rect x="18.0" y="229" width="0.3" height="15.0" fill="rgb(254,195,13)" rx="2" ry="2" />
<text  x="21.05" y="239.5" ></text>
</g>
<g >
<title>vtkZLibDataCompressor::CompressBuffer (159 samples, 1.03%)</title><rect x="18.3" y="213" width="12.2" height="15.0" fill="rgb(244,42,0)" rx="2" ry="2" />
<text  x="21.28" y="223.5" ></text>
</g>
<g >
<title>clear_rec (178 samples, 1.16%)</title><rect x="137.5" y="549" width="13.7" height="15.0" fill="rgb(215,52,48)" rx="2" ry="2" />
<text  x="140.52" y="559.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryData (11 samples, 0.07%)</title><rect x="58.0" y="357" width="0.9" height="15.0" fill="rgb(211,148,14)" rx="2" ry="2" />
<text  x="61.05" y="367.5" ></text>
</g>
<g >
<title>vtkDataCompressor::Compress (348 samples, 2.26%)</title><rect x="59.2" y="165" width="26.7" height="15.0" fill="rgb(241,216,28)" rx="2" ry="2" />
<text  x="62.20" y="175.5" >v..</text>
</g>
<g >
<title>vtkGenericDataArray&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, long long&gt;::InsertNextValue (3 samples, 0.02%)</title><rect x="38.6" y="533" width="0.2" height="15.0" fill="rgb(210,185,3)" rx="2" ry="2" />
<text  x="41.58" y="543.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WritePointsAppendedData (11 samples, 0.07%)</title><rect x="58.0" y="389" width="0.9" height="15.0" fill="rgb(220,228,30)" rx="2" ry="2" />
<text  x="61.05" y="399.5" ></text>
</g>
<g >
<title>gcm::FreeBorderCalculator::doCalc (105 samples, 0.68%)</title><rect x="214.7" y="613" width="8.0" height="15.0" fill="rgb(254,129,26)" rx="2" ry="2" />
<text  x="217.69" y="623.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataBlock (9 samples, 0.06%)</title><rect x="30.5" y="245" width="0.7" height="15.0" fill="rgb(234,135,52)" rx="2" ry="2" />
<text  x="33.54" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (8 samples, 0.05%)</title><rect x="142.7" y="469" width="0.6" height="15.0" fill="rgb(248,11,53)" rx="2" ry="2" />
<text  x="145.65" y="479.5" ></text>
</g>
<g >
<title>std::ostream::write (5 samples, 0.03%)</title><rect x="10.5" y="725" width="0.4" height="15.0" fill="rgb(216,200,46)" rx="2" ry="2" />
<text  x="13.54" y="735.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::initSpatialIndex (689 samples, 4.47%)</title><rect x="135.4" y="645" width="52.8" height="15.0" fill="rgb(205,82,22)" rx="2" ry="2" />
<text  x="138.37" y="655.5" >gcm::..</text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::ScalarRangeDispatchWrapper&amp;&gt; (7 samples, 0.05%)</title><rect x="39.5" y="245" width="0.5" height="15.0" fill="rgb(233,227,35)" rx="2" ry="2" />
<text  x="42.50" y="255.5" ></text>
</g>
<g >
<title>gcm::CalcNode::CalcNode (157 samples, 1.02%)</title><rect x="1120.8" y="581" width="12.0" height="15.0" fill="rgb(213,39,26)" rx="2" ry="2" />
<text  x="1123.80" y="591.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::decompose (9 samples, 0.06%)</title><rect x="108.2" y="613" width="0.7" height="15.0" fill="rgb(240,43,40)" rx="2" ry="2" />
<text  x="111.24" y="623.5" ></text>
</g>
<g >
<title>gcm3d (15,398 samples, 100.00%)</title><rect x="10.0" y="773" width="1180.0" height="15.0" fill="rgb(227,225,18)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >gcm3d</text>
</g>
<g >
<title>gcm::CalcNode::isInner (9 samples, 0.06%)</title><rect x="286.4" y="597" width="0.7" height="15.0" fill="rgb(212,158,7)" rx="2" ry="2" />
<text  x="289.42" y="607.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getL@plt (7 samples, 0.05%)</title><rect x="132.1" y="613" width="0.5" height="15.0" fill="rgb(217,146,50)" rx="2" ry="2" />
<text  x="135.08" y="623.5" ></text>
</g>
<g >
<title>vtkStreamingDemandDrivenPipeline::Update (282 samples, 1.83%)</title><rect x="12.3" y="565" width="21.6" height="15.0" fill="rgb(223,10,5)" rx="2" ry="2" />
<text  x="15.30" y="575.5" >v..</text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::fastScanForOwnerTetr (6 samples, 0.04%)</title><rect x="34.8" y="581" width="0.4" height="15.0" fill="rgb(248,215,51)" rx="2" ry="2" />
<text  x="37.75" y="591.5" ></text>
</g>
<g >
<title>gcm::AABB::isInAABB (13 samples, 0.08%)</title><rect x="332.9" y="581" width="1.0" height="15.0" fill="rgb(209,97,2)" rx="2" ry="2" />
<text  x="335.86" y="591.5" ></text>
</g>
<g >
<title>vtkBase64Utilities::EncodeTriplet (2 samples, 0.01%)</title><rect x="12.4" y="165" width="0.1" height="15.0" fill="rgb(207,89,28)" rx="2" ry="2" />
<text  x="15.38" y="175.5" ></text>
</g>
<g >
<title>vtkZLibDataCompressor::CompressBuffer (17 samples, 0.11%)</title><rect x="40.7" y="181" width="1.3" height="15.0" fill="rgb(215,208,25)" rx="2" ry="2" />
<text  x="43.65" y="191.5" ></text>
</g>
<g >
<title>gcm::gcm_matrix::get (12 samples, 0.08%)</title><rect x="118.1" y="613" width="0.9" height="15.0" fill="rgb(240,116,5)" rx="2" ry="2" />
<text  x="121.13" y="623.5" ></text>
</g>
<g >
<title>vtkCompositeDataPipeline::ExecuteData (612 samples, 3.97%)</title><rect x="39.0" y="501" width="46.9" height="15.0" fill="rgb(225,153,22)" rx="2" ry="2" />
<text  x="41.97" y="511.5" >vtkC..</text>
</g>
<g >
<title>determinant (65 samples, 0.42%)</title><rect x="863.5" y="565" width="4.9" height="15.0" fill="rgb(232,152,36)" rx="2" ry="2" />
<text  x="866.47" y="575.5" ></text>
</g>
<g >
<title>vtkDataArray::ComputeRange (15 samples, 0.10%)</title><rect x="39.5" y="341" width="1.2" height="15.0" fill="rgb(225,48,26)" rx="2" ry="2" />
<text  x="42.50" y="351.5" ></text>
</g>
<g >
<title>kd_free (179 samples, 1.16%)</title><rect x="137.4" y="629" width="13.8" height="15.0" fill="rgb(247,70,35)" rx="2" ry="2" />
<text  x="140.44" y="639.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataBlock (35 samples, 0.23%)</title><rect x="31.2" y="197" width="2.7" height="15.0" fill="rgb(214,173,48)" rx="2" ry="2" />
<text  x="34.23" y="207.5" ></text>
</g>
<g >
<title>vtkDataArray::ComputeScalarRange (13 samples, 0.08%)</title><rect x="39.5" y="325" width="1.0" height="15.0" fill="rgb(219,123,50)" rx="2" ry="2" />
<text  x="42.50" y="335.5" ></text>
</g>
<g >
<title>gcm::gcm_matrix::get (5 samples, 0.03%)</title><rect x="117.7" y="597" width="0.4" height="15.0" fill="rgb(218,183,8)" rx="2" ry="2" />
<text  x="120.75" y="607.5" ></text>
</g>
<g >
<title>vectorSquareNorm (2 samples, 0.01%)</title><rect x="405.3" y="565" width="0.1" height="15.0" fill="rgb(236,103,50)" rx="2" ry="2" />
<text  x="408.27" y="575.5" ></text>
</g>
<g >
<title>vtkzlib_adler32 (4 samples, 0.03%)</title><rect x="45.1" y="117" width="0.3" height="15.0" fill="rgb(229,228,47)" rx="2" ry="2" />
<text  x="48.10" y="127.5" ></text>
</g>
<g >
<title>malloc_consolidate (3 samples, 0.02%)</title><rect x="1170.1" y="741" width="0.2" height="15.0" fill="rgb(237,208,8)" rx="2" ry="2" />
<text  x="1173.08" y="751.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (17 samples, 0.11%)</title><rect x="40.7" y="261" width="1.3" height="15.0" fill="rgb(238,191,31)" rx="2" ry="2" />
<text  x="43.65" y="271.5" ></text>
</g>
<g >
<title>vtkXMLUnstructuredDataWriter::WriteCellsAppendedDataWorker (352 samples, 2.29%)</title><rect x="58.9" y="389" width="27.0" height="15.0" fill="rgb(225,168,8)" rx="2" ry="2" />
<text  x="61.89" y="399.5" >v..</text>
</g>
<g >
<title>gcm::CalcNode::getMaterialId@plt (3 samples, 0.02%)</title><rect x="334.8" y="581" width="0.2" height="15.0" fill="rgb(239,164,40)" rx="2" ry="2" />
<text  x="337.77" y="591.5" ></text>
</g>
<g >
<title>gsl_linalg_LU_svx (2 samples, 0.01%)</title><rect x="1165.3" y="741" width="0.2" height="15.0" fill="rgb(210,51,14)" rx="2" ry="2" />
<text  x="1168.32" y="751.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (35 samples, 0.23%)</title><rect x="31.2" y="277" width="2.7" height="15.0" fill="rgb(213,93,40)" rx="2" ry="2" />
<text  x="34.23" y="287.5" ></text>
</g>
<g >
<title>vtkSMPTools::For&lt;(anonymous namespace)::DistinctCellTypesWorker&gt; (7 samples, 0.05%)</title><rect x="39.0" y="421" width="0.5" height="15.0" fill="rgb(250,119,0)" rx="2" ry="2" />
<text  x="41.97" y="431.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteArrayAppendedData (35 samples, 0.23%)</title><rect x="31.2" y="373" width="2.7" height="15.0" fill="rgb(230,3,33)" rx="2" ry="2" />
<text  x="34.23" y="383.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteCellDataAppendedData (51 samples, 0.33%)</title><rect x="12.3" y="389" width="3.9" height="15.0" fill="rgb(248,56,36)" rx="2" ry="2" />
<text  x="15.30" y="399.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteCompressionBlock (352 samples, 2.29%)</title><rect x="58.9" y="181" width="27.0" height="15.0" fill="rgb(224,71,45)" rx="2" ry="2" />
<text  x="61.89" y="191.5" >v..</text>
</g>
<g >
<title>clear_rec (7 samples, 0.05%)</title><rect x="150.5" y="389" width="0.6" height="15.0" fill="rgb(239,17,42)" rx="2" ry="2" />
<text  x="153.55" y="399.5" ></text>
</g>
<g >
<title>gcm::BorderCondition::doCalc (169 samples, 1.10%)</title><rect x="214.3" y="629" width="13.0" height="15.0" fill="rgb(238,77,42)" rx="2" ry="2" />
<text  x="217.30" y="639.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::getBorderElementsForNode (2 samples, 0.01%)</title><rect x="910.0" y="581" width="0.1" height="15.0" fill="rgb(218,170,42)" rx="2" ry="2" />
<text  x="912.98" y="591.5" ></text>
</g>
<g >
<title>vtkXMLWriterHelper::WriteBinaryDataBlock (50 samples, 0.32%)</title><rect x="12.4" y="245" width="3.8" height="15.0" fill="rgb(238,213,37)" rx="2" ry="2" />
<text  x="15.38" y="255.5" ></text>
</g>
<g >
<title>vtkDataArray::GetRange (9 samples, 0.06%)</title><rect x="16.2" y="357" width="0.7" height="15.0" fill="rgb(221,145,13)" rx="2" ry="2" />
<text  x="19.21" y="367.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryData (50 samples, 0.32%)</title><rect x="12.4" y="357" width="3.8" height="15.0" fill="rgb(243,25,3)" rx="2" ry="2" />
<text  x="15.38" y="367.5" ></text>
</g>
<g >
<title>gcm::ICalcNode::ICalcNode (10 samples, 0.06%)</title><rect x="1132.8" y="581" width="0.8" height="15.0" fill="rgb(237,154,10)" rx="2" ry="2" />
<text  x="1135.83" y="591.5" ></text>
</g>
<g >
<title>vtkZLibDataCompressor::CompressBuffer (48 samples, 0.31%)</title><rect x="12.5" y="181" width="3.7" height="15.0" fill="rgb(211,167,30)" rx="2" ry="2" />
<text  x="15.53" y="191.5" ></text>
</g>
<g >
<title>vtkzlib__tr_flush_block (3 samples, 0.02%)</title><rect x="16.0" y="117" width="0.2" height="15.0" fill="rgb(229,227,45)" rx="2" ry="2" />
<text  x="18.98" y="127.5" ></text>
</g>
<g >
<title>vtkDataCompressor::Compress (14 samples, 0.09%)</title><rect x="17.0" y="197" width="1.0" height="15.0" fill="rgb(207,112,0)" rx="2" ry="2" />
<text  x="19.97" y="207.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isUsed (12 samples, 0.08%)</title><rect x="204.5" y="645" width="0.9" height="15.0" fill="rgb(216,226,24)" rx="2" ry="2" />
<text  x="207.50" y="655.5" ></text>
</g>
<g >
<title>vtkXMLUnstructuredDataWriter::WriteAppendedPieceData (247 samples, 1.60%)</title><rect x="12.3" y="405" width="18.9" height="15.0" fill="rgb(210,56,3)" rx="2" ry="2" />
<text  x="15.30" y="415.5" ></text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;double&gt;, double&gt;, true&gt;::Execute (6 samples, 0.04%)</title><rect x="40.0" y="149" width="0.5" height="15.0" fill="rgb(235,196,11)" rx="2" ry="2" />
<text  x="43.04" y="159.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isLocal (10 samples, 0.06%)</title><rect x="203.7" y="645" width="0.8" height="15.0" fill="rgb(206,72,31)" rx="2" ry="2" />
<text  x="206.73" y="655.5" ></text>
</g>
<g >
<title>fill_window (2 samples, 0.01%)</title><rect x="20.0" y="149" width="0.2" height="15.0" fill="rgb(220,121,13)" rx="2" ry="2" />
<text  x="23.04" y="159.5" ></text>
</g>
<g >
<title>vtkzlib_adler32 (2 samples, 0.01%)</title><rect x="20.0" y="117" width="0.2" height="15.0" fill="rgb(230,98,13)" rx="2" ry="2" />
<text  x="23.04" y="127.5" ></text>
</g>
<g >
<title>cblas_dtrsv (26 samples, 0.17%)</title><rect x="1180.7" y="757" width="2.0" height="15.0" fill="rgb(211,133,21)" rx="2" ry="2" />
<text  x="1183.73" y="767.5" ></text>
</g>
<g >
<title>__sincosf (10 samples, 0.06%)</title><rect x="96.4" y="597" width="0.7" height="15.0" fill="rgb(232,225,19)" rx="2" ry="2" />
<text  x="99.37" y="607.5" ></text>
</g>
<g >
<title>gcm::Engine::createSnapshot (678 samples, 4.40%)</title><rect x="33.9" y="693" width="52.0" height="15.0" fill="rgb(241,179,14)" rx="2" ry="2" />
<text  x="36.91" y="703.5" >gcm::..</text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;double&gt;, double&gt;, true&gt;::For (5 samples, 0.03%)</title><rect x="16.4" y="181" width="0.4" height="15.0" fill="rgb(240,80,33)" rx="2" ry="2" />
<text  x="19.44" y="191.5" ></text>
</g>
<g >
<title>gsl_permute (6 samples, 0.04%)</title><rect x="1165.5" y="741" width="0.4" height="15.0" fill="rgb(251,178,11)" rx="2" ry="2" />
<text  x="1168.48" y="751.5" ></text>
</g>
<g >
<title>vtkXMLWriterHelper::WriteBinaryDataBlock (11 samples, 0.07%)</title><rect x="58.0" y="261" width="0.9" height="15.0" fill="rgb(229,160,18)" rx="2" ry="2" />
<text  x="61.05" y="271.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::fastScanForOwnerTetr (329 samples, 2.14%)</title><rect x="911.6" y="549" width="25.2" height="15.0" fill="rgb(248,179,8)" rx="2" ry="2" />
<text  x="914.59" y="559.5" >g..</text>
</g>
<g >
<title>gcm::TetrMeshSecondOrder::~TetrMeshSecondOrder (2 samples, 0.01%)</title><rect x="1154.8" y="645" width="0.2" height="15.0" fill="rgb(235,76,47)" rx="2" ry="2" />
<text  x="1157.83" y="655.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (15 samples, 0.10%)</title><rect x="16.9" y="261" width="1.1" height="15.0" fill="rgb(214,96,38)" rx="2" ry="2" />
<text  x="19.90" y="271.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::checkTopology (884 samples, 5.74%)</title><rect x="120.6" y="661" width="67.7" height="15.0" fill="rgb(226,56,6)" rx="2" ry="2" />
<text  x="123.58" y="671.5" >gcm::Te..</text>
</g>
<g >
<title>vtkXMLUnstructuredDataWriter::WriteAPiece (282 samples, 1.83%)</title><rect x="12.3" y="437" width="21.6" height="15.0" fill="rgb(242,70,15)" rx="2" ry="2" />
<text  x="15.30" y="447.5" >v..</text>
</g>
<g >
<title>gcm::RheologyMatrix::getMaxEigenvalue (109 samples, 0.71%)</title><rect x="124.9" y="629" width="8.4" height="15.0" fill="rgb(213,106,50)" rx="2" ry="2" />
<text  x="127.95" y="639.5" ></text>
</g>
<g >
<title>gcm::CalcNode::getShear (3 samples, 0.02%)</title><rect x="10.9" y="629" width="0.2" height="15.0" fill="rgb(227,162,34)" rx="2" ry="2" />
<text  x="13.92" y="639.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryData (177 samples, 1.15%)</title><rect x="16.9" y="357" width="13.6" height="15.0" fill="rgb(253,79,7)" rx="2" ry="2" />
<text  x="19.90" y="367.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getL@plt (8 samples, 0.05%)</title><rect x="124.3" y="629" width="0.6" height="15.0" fill="rgb(249,44,9)" rx="2" ry="2" />
<text  x="127.34" y="639.5" ></text>
</g>
<g >
<title>gcm::Engine::getMaterial (6 samples, 0.04%)</title><rect x="876.5" y="565" width="0.5" height="15.0" fill="rgb(229,59,16)" rx="2" ry="2" />
<text  x="879.49" y="575.5" ></text>
</g>
<g >
<title>clear_rec (166 samples, 1.08%)</title><rect x="138.4" y="517" width="12.8" height="15.0" fill="rgb(208,120,54)" rx="2" ry="2" />
<text  x="141.44" y="527.5" ></text>
</g>
<g >
<title>vtkUnstructuredGrid::InternalInsertNextCell (9 samples, 0.06%)</title><rect x="38.2" y="597" width="0.7" height="15.0" fill="rgb(211,93,47)" rx="2" ry="2" />
<text  x="41.20" y="607.5" ></text>
</g>
<g >
<title>clear_rec (149 samples, 0.97%)</title><rect x="139.7" y="501" width="11.5" height="15.0" fill="rgb(247,30,10)" rx="2" ry="2" />
<text  x="142.74" y="511.5" ></text>
</g>
<g >
<title>vtkBase64OutputStream::EncodeTriplet (4 samples, 0.03%)</title><rect x="42.1" y="213" width="0.3" height="15.0" fill="rgb(242,84,24)" rx="2" ry="2" />
<text  x="45.11" y="223.5" ></text>
</g>
<g >
<title>deflate_slow (345 samples, 2.24%)</title><rect x="59.2" y="101" width="26.4" height="15.0" fill="rgb(235,148,22)" rx="2" ry="2" />
<text  x="62.20" y="111.5" >d..</text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::ScalarRangeDispatchWrapper&amp;&gt; (8 samples, 0.05%)</title><rect x="16.2" y="277" width="0.6" height="15.0" fill="rgb(235,86,46)" rx="2" ry="2" />
<text  x="19.21" y="287.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteCompressionBlock (9 samples, 0.06%)</title><rect x="30.5" y="229" width="0.7" height="15.0" fill="rgb(235,183,41)" rx="2" ry="2" />
<text  x="33.54" y="239.5" ></text>
</g>
<g >
<title>vtkXMLWriterHelper::WriteBinaryDataBlock (162 samples, 1.05%)</title><rect x="18.0" y="277" width="12.5" height="15.0" fill="rgb(216,120,42)" rx="2" ry="2" />
<text  x="21.05" y="287.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (352 samples, 2.29%)</title><rect x="58.9" y="245" width="27.0" height="15.0" fill="rgb(251,13,34)" rx="2" ry="2" />
<text  x="61.89" y="255.5" >v..</text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (50 samples, 0.32%)</title><rect x="12.4" y="293" width="3.8" height="15.0" fill="rgb(220,176,10)" rx="2" ry="2" />
<text  x="15.38" y="303.5" ></text>
</g>
<g >
<title>vtkDataCompressor::Compress (11 samples, 0.07%)</title><rect x="58.0" y="213" width="0.9" height="15.0" fill="rgb(225,141,12)" rx="2" ry="2" />
<text  x="61.05" y="223.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (15 samples, 0.10%)</title><rect x="16.9" y="277" width="1.1" height="15.0" fill="rgb(234,179,8)" rx="2" ry="2" />
<text  x="19.90" y="287.5" ></text>
</g>
<g >
<title>compress_block (3 samples, 0.02%)</title><rect x="31.0" y="117" width="0.2" height="15.0" fill="rgb(249,196,36)" rx="2" ry="2" />
<text  x="34.00" y="127.5" ></text>
</g>
<g >
<title>clear_rec (73 samples, 0.47%)</title><rect x="145.5" y="453" width="5.6" height="15.0" fill="rgb(231,89,13)" rx="2" ry="2" />
<text  x="148.49" y="463.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::checkCharactCache (97 samples, 0.63%)</title><rect x="394.6" y="581" width="7.5" height="15.0" fill="rgb(231,146,39)" rx="2" ry="2" />
<text  x="397.62" y="591.5" ></text>
</g>
<g >
<title>build_tree (8 samples, 0.05%)</title><rect x="84.0" y="69" width="0.6" height="15.0" fill="rgb(218,62,18)" rx="2" ry="2" />
<text  x="86.95" y="79.5" ></text>
</g>
<g >
<title>vtkzlib_deflate (48 samples, 0.31%)</title><rect x="12.5" y="149" width="3.7" height="15.0" fill="rgb(214,200,2)" rx="2" ry="2" />
<text  x="15.53" y="159.5" ></text>
</g>
<g >
<title>gcm::CalcNode::calcMainStressComponents (3 samples, 0.02%)</title><rect x="10.9" y="613" width="0.2" height="15.0" fill="rgb(246,11,0)" rx="2" ry="2" />
<text  x="13.92" y="623.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (177 samples, 1.15%)</title><rect x="16.9" y="293" width="13.6" height="15.0" fill="rgb(236,117,10)" rx="2" ry="2" />
<text  x="19.90" y="303.5" ></text>
</g>
<g >
<title>gcm::TetrMeshSecondOrder::interpolateNode (7,402 samples, 48.07%)</title><rect x="322.4" y="597" width="567.3" height="15.0" fill="rgb(254,184,39)" rx="2" ry="2" />
<text  x="325.43" y="607.5" >gcm::TetrMeshSecondOrder::interpolateNode</text>
</g>
<g >
<title>vtkDataArray::ComputeScalarRange (8 samples, 0.05%)</title><rect x="16.2" y="325" width="0.6" height="15.0" fill="rgb(249,33,7)" rx="2" ry="2" />
<text  x="19.21" y="335.5" ></text>
</g>
<g >
<title>gcm::gcm_matrix::get@plt (113 samples, 0.73%)</title><rect x="1104.3" y="629" width="8.7" height="15.0" fill="rgb(240,160,49)" rx="2" ry="2" />
<text  x="1107.32" y="639.5" ></text>
</g>
<g >
<title>vtkDataCompressor::Compress (9 samples, 0.06%)</title><rect x="30.5" y="213" width="0.7" height="15.0" fill="rgb(217,39,6)" rx="2" ry="2" />
<text  x="33.54" y="223.5" ></text>
</g>
<g >
<title>malloc (52 samples, 0.34%)</title><rect x="1166.1" y="741" width="4.0" height="15.0" fill="rgb(220,208,6)" rx="2" ry="2" />
<text  x="1169.09" y="751.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataBlock (352 samples, 2.29%)</title><rect x="58.9" y="197" width="27.0" height="15.0" fill="rgb(215,213,40)" rx="2" ry="2" />
<text  x="61.89" y="207.5" >v..</text>
</g>
<g >
<title>gcm::Mesh::getNode@plt (39 samples, 0.25%)</title><rect x="318.1" y="597" width="3.0" height="15.0" fill="rgb(228,86,46)" rx="2" ry="2" />
<text  x="321.14" y="607.5" ></text>
</g>
<g >
<title>gcm::CalcNode::getCustomFlag@plt (4 samples, 0.03%)</title><rect x="334.5" y="581" width="0.3" height="15.0" fill="rgb(231,222,39)" rx="2" ry="2" />
<text  x="337.47" y="591.5" ></text>
</g>
<g >
<title>gcm::CalcNode::operator= (338 samples, 2.20%)</title><rect x="287.1" y="597" width="25.9" height="15.0" fill="rgb(210,117,15)" rx="2" ry="2" />
<text  x="290.11" y="607.5" >g..</text>
</g>
<g >
<title>compress_block (14 samples, 0.09%)</title><rect x="84.6" y="69" width="1.0" height="15.0" fill="rgb(219,110,12)" rx="2" ry="2" />
<text  x="87.56" y="79.5" ></text>
</g>
<g >
<title>gcm::InterpolationFixedAxis::find_nodes_on_previous_time_layer (8,293 samples, 53.86%)</title><rect x="255.1" y="613" width="635.5" height="15.0" fill="rgb(238,53,39)" rx="2" ry="2" />
<text  x="258.07" y="623.5" >gcm::InterpolationFixedAxis::find_nodes_on_previous_time_layer</text>
</g>
<g >
<title>gcm::Node::~Node@plt (4 samples, 0.03%)</title><rect x="1152.5" y="645" width="0.3" height="15.0" fill="rgb(217,138,49)" rx="2" ry="2" />
<text  x="1155.53" y="655.5" ></text>
</g>
<g >
<title>_int_free (43 samples, 0.28%)</title><rect x="1174.7" y="757" width="3.3" height="15.0" fill="rgb(245,49,31)" rx="2" ry="2" />
<text  x="1177.67" y="767.5" ></text>
</g>
<g >
<title>gcm::CalcNode::calcMainStressComponents (2 samples, 0.01%)</title><rect x="34.1" y="613" width="0.2" height="15.0" fill="rgb(236,140,33)" rx="2" ry="2" />
<text  x="37.14" y="623.5" ></text>
</g>
<g >
<title>clear_rec (174 samples, 1.13%)</title><rect x="137.8" y="533" width="13.4" height="15.0" fill="rgb(234,161,1)" rx="2" ry="2" />
<text  x="140.82" y="543.5" ></text>
</g>
<g >
<title>_int_malloc (36 samples, 0.23%)</title><rect x="1178.0" y="757" width="2.7" height="15.0" fill="rgb(229,87,54)" rx="2" ry="2" />
<text  x="1180.97" y="767.5" ></text>
</g>
<g >
<title>read_buf (2 samples, 0.01%)</title><rect x="20.0" y="133" width="0.2" height="15.0" fill="rgb(208,28,54)" rx="2" ry="2" />
<text  x="23.04" y="143.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::Dispatch::Execute&lt;(anonymous namespace)::ScalarRangeDispatchWrapper&amp;&gt; (13 samples, 0.08%)</title><rect x="39.5" y="309" width="1.0" height="15.0" fill="rgb(251,135,5)" rx="2" ry="2" />
<text  x="42.50" y="319.5" ></text>
</g>
<g >
<title>gcm::Material::getRho@plt (7 samples, 0.05%)</title><rect x="877.3" y="565" width="0.5" height="15.0" fill="rgb(223,60,24)" rx="2" ry="2" />
<text  x="880.26" y="575.5" ></text>
</g>
<g >
<title>vtkXMLWriterHelper::WriteBinaryDataBlock (35 samples, 0.23%)</title><rect x="31.2" y="213" width="2.7" height="15.0" fill="rgb(214,25,11)" rx="2" ry="2" />
<text  x="34.23" y="223.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.08%)</title><rect x="1188.8" y="741" width="0.9" height="15.0" fill="rgb(237,143,20)" rx="2" ry="2" />
<text  x="1191.77" y="751.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (227 samples, 1.47%)</title><rect x="40.7" y="309" width="17.3" height="15.0" fill="rgb(234,109,44)" rx="2" ry="2" />
<text  x="43.65" y="319.5" ></text>
</g>
<g >
<title>gsl_matrix_set@plt (5 samples, 0.03%)</title><rect x="226.5" y="613" width="0.4" height="15.0" fill="rgb(235,119,32)" rx="2" ry="2" />
<text  x="229.49" y="623.5" ></text>
</g>
<g >
<title>_int_free (6 samples, 0.04%)</title><rect x="142.2" y="469" width="0.5" height="15.0" fill="rgb(249,25,15)" rx="2" ry="2" />
<text  x="145.19" y="479.5" ></text>
</g>
<g >
<title>vtkZLibDataCompressor::CompressBuffer (35 samples, 0.23%)</title><rect x="31.2" y="149" width="2.7" height="15.0" fill="rgb(219,12,14)" rx="2" ry="2" />
<text  x="34.23" y="159.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryData (227 samples, 1.47%)</title><rect x="40.7" y="357" width="17.3" height="15.0" fill="rgb(231,64,20)" rx="2" ry="2" />
<text  x="43.65" y="367.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteCompressionBlock (50 samples, 0.32%)</title><rect x="12.4" y="213" width="3.8" height="15.0" fill="rgb(215,28,43)" rx="2" ry="2" />
<text  x="15.38" y="223.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WritePointDataAppendedData (242 samples, 1.57%)</title><rect x="39.5" y="389" width="18.5" height="15.0" fill="rgb(225,193,2)" rx="2" ry="2" />
<text  x="42.50" y="399.5" ></text>
</g>
<g >
<title>gcm::CalcNode::isBorder (2 samples, 0.01%)</title><rect x="203.2" y="645" width="0.1" height="15.0" fill="rgb(238,8,9)" rx="2" ry="2" />
<text  x="206.19" y="655.5" ></text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;int&gt;, int&gt;, true&gt;::For (3 samples, 0.02%)</title><rect x="16.2" y="149" width="0.2" height="15.0" fill="rgb(215,193,26)" rx="2" ry="2" />
<text  x="19.21" y="159.5" ></text>
</g>
<g >
<title>longest_match (35 samples, 0.23%)</title><rect x="13.3" y="117" width="2.7" height="15.0" fill="rgb(251,181,15)" rx="2" ry="2" />
<text  x="16.30" y="127.5" ></text>
</g>
<g >
<title>deflate_slow (16 samples, 0.10%)</title><rect x="40.7" y="133" width="1.2" height="15.0" fill="rgb(239,137,26)" rx="2" ry="2" />
<text  x="43.65" y="143.5" ></text>
</g>
<g >
<title>vtkDataArrayPrivate::ComputeScalarRange&lt;1&gt;::operator (3 samples, 0.02%)</title><rect x="16.2" y="197" width="0.2" height="15.0" fill="rgb(229,93,14)" rx="2" ry="2" />
<text  x="19.21" y="207.5" ></text>
</g>
<g >
<title>vtkBase64UtilitiesEncodeChar (2 samples, 0.01%)</title><rect x="12.4" y="149" width="0.1" height="15.0" fill="rgb(231,21,52)" rx="2" ry="2" />
<text  x="15.38" y="159.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteCompressionBlock (17 samples, 0.11%)</title><rect x="40.7" y="213" width="1.3" height="15.0" fill="rgb(253,205,21)" rx="2" ry="2" />
<text  x="43.65" y="223.5" ></text>
</g>
<g >
<title>vtkzlib__tr_flush_block (5 samples, 0.03%)</title><rect x="30.8" y="133" width="0.4" height="15.0" fill="rgb(244,107,39)" rx="2" ry="2" />
<text  x="33.84" y="143.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::findBorderNodeNormal (6 samples, 0.04%)</title><rect x="34.8" y="629" width="0.4" height="15.0" fill="rgb(245,150,43)" rx="2" ry="2" />
<text  x="37.75" y="639.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::ScalarRangeDispatchWrapper&amp;&gt; (8 samples, 0.05%)</title><rect x="16.2" y="261" width="0.6" height="15.0" fill="rgb(212,164,7)" rx="2" ry="2" />
<text  x="19.21" y="271.5" ></text>
</g>
<g >
<title>vtkAlgorithm::Update (612 samples, 3.97%)</title><rect x="39.0" y="597" width="46.9" height="15.0" fill="rgb(223,135,36)" rx="2" ry="2" />
<text  x="41.97" y="607.5" >vtkA..</text>
</g>
<g >
<title>gcm::RheologyMatrix::getU1@plt (62 samples, 0.40%)</title><rect x="950.8" y="629" width="4.7" height="15.0" fill="rgb(222,12,24)" rx="2" ry="2" />
<text  x="953.75" y="639.5" ></text>
</g>
<g >
<title>gcm::CalcNode::getCustomFlag (4 samples, 0.03%)</title><rect x="334.2" y="581" width="0.3" height="15.0" fill="rgb(228,84,1)" rx="2" ry="2" />
<text  x="337.16" y="591.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.01%)</title><rect x="137.6" y="533" width="0.1" height="15.0" fill="rgb(238,119,41)" rx="2" ry="2" />
<text  x="140.59" y="543.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNode (7 samples, 0.05%)</title><rect x="911.7" y="533" width="0.6" height="15.0" fill="rgb(224,60,12)" rx="2" ry="2" />
<text  x="914.74" y="543.5" ></text>
</g>
<g >
<title>longest_match (10 samples, 0.06%)</title><rect x="41.1" y="117" width="0.8" height="15.0" fill="rgb(217,73,18)" rx="2" ry="2" />
<text  x="44.11" y="127.5" ></text>
</g>
<g >
<title>tetrVolume@plt (15 samples, 0.10%)</title><rect x="887.7" y="581" width="1.1" height="15.0" fill="rgb(228,11,50)" rx="2" ry="2" />
<text  x="890.68" y="591.5" ></text>
</g>
<g >
<title>gcm::gcm_matrix::get (4 samples, 0.03%)</title><rect x="222.4" y="597" width="0.3" height="15.0" fill="rgb(207,14,47)" rx="2" ry="2" />
<text  x="225.43" y="607.5" ></text>
</g>
<g >
<title>gcm::CalcNode::setRho@plt (3 samples, 0.02%)</title><rect x="344.7" y="581" width="0.2" height="15.0" fill="rgb(249,155,42)" rx="2" ry="2" />
<text  x="347.66" y="591.5" ></text>
</g>
<g >
<title>vtkXMLUnstructuredDataWriter::WriteAppendedPieceData (253 samples, 1.64%)</title><rect x="39.5" y="405" width="19.4" height="15.0" fill="rgb(230,140,52)" rx="2" ry="2" />
<text  x="42.50" y="415.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getU (41 samples, 0.27%)</title><rect x="1074.9" y="613" width="3.1" height="15.0" fill="rgb(254,34,40)" rx="2" ry="2" />
<text  x="1077.90" y="623.5" ></text>
</g>
<g >
<title>vtkXMLWriter::WriteBinaryDataBlock (162 samples, 1.05%)</title><rect x="18.0" y="261" width="12.5" height="15.0" fill="rgb(220,157,51)" rx="2" ry="2" />
<text  x="21.05" y="271.5" ></text>
</g>
<g >
<title>vtkzlib_compress2 (9 samples, 0.06%)</title><rect x="30.5" y="181" width="0.7" height="15.0" fill="rgb(254,47,16)" rx="2" ry="2" />
<text  x="33.54" y="191.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::updateCharactCache (13 samples, 0.08%)</title><rect x="721.3" y="565" width="1.0" height="15.0" fill="rgb(228,20,31)" rx="2" ry="2" />
<text  x="724.31" y="575.5" ></text>
</g>
<g >
<title>vtkXMLWriterHelper::WriteBinaryDataBlock (352 samples, 2.29%)</title><rect x="58.9" y="213" width="27.0" height="15.0" fill="rgb(239,166,35)" rx="2" ry="2" />
<text  x="61.89" y="223.5" >v..</text>
</g>
<g >
<title>vtkzlib_deflate (204 samples, 1.32%)</title><rect x="42.4" y="181" width="15.6" height="15.0" fill="rgb(245,74,45)" rx="2" ry="2" />
<text  x="45.42" y="191.5" ></text>
</g>
<g >
<title>determinant (27 samples, 0.18%)</title><rect x="883.6" y="549" width="2.1" height="15.0" fill="rgb(242,206,17)" rx="2" ry="2" />
<text  x="886.62" y="559.5" ></text>
</g>
<g >
<title>gcm::TetrMeshSecondOrder::getTetr (1,499 samples, 9.74%)</title><rect x="562.4" y="549" width="114.9" height="15.0" fill="rgb(206,183,31)" rx="2" ry="2" />
<text  x="565.45" y="559.5" >gcm::TetrMeshS..</text>
</g>
<g >
<title>gcm::Mesh::dump[abi:cxx11] (300 samples, 1.95%)</title><rect x="10.9" y="677" width="23.0" height="15.0" fill="rgb(226,207,38)" rx="2" ry="2" />
<text  x="13.92" y="687.5" >g..</text>
</g>
<g >
<title>vtkArrayDispatch::DispatchByArray&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (11 samples, 0.07%)</title><rect x="58.0" y="325" width="0.9" height="15.0" fill="rgb(243,156,31)" rx="2" ry="2" />
<text  x="61.05" y="335.5" ></text>
</g>
<g >
<title>deflate_slow (159 samples, 1.03%)</title><rect x="18.3" y="165" width="12.2" height="15.0" fill="rgb(236,176,53)" rx="2" ry="2" />
<text  x="21.28" y="175.5" ></text>
</g>
<g >
<title>vtkzlib_compress2 (11 samples, 0.07%)</title><rect x="58.0" y="181" width="0.9" height="15.0" fill="rgb(218,114,0)" rx="2" ry="2" />
<text  x="61.05" y="191.5" ></text>
</g>
<g >
<title>gcm::TetrMeshSecondOrder::getTetr (2 samples, 0.01%)</title><rect x="11.5" y="549" width="0.1" height="15.0" fill="rgb(208,14,15)" rx="2" ry="2" />
<text  x="14.46" y="559.5" ></text>
</g>
<g >
<title>vtk::detail::smp::vtkSMPTools_Impl_For&lt;vtk::detail::smp::vtkSMPTools_FunctorInternal&lt;vtkDataArrayPrivate::AllValuesMinAndMax&lt;1, vtkAOSDataArrayTemplate&lt;double&gt;, double&gt;, true&gt; &gt; (5 samples, 0.03%)</title><rect x="16.4" y="165" width="0.4" height="15.0" fill="rgb(248,37,48)" rx="2" ry="2" />
<text  x="19.44" y="175.5" ></text>
</g>
<g >
<title>gcm::CalcNode::getTension (2 samples, 0.01%)</title><rect x="11.1" y="629" width="0.2" height="15.0" fill="rgb(246,163,50)" rx="2" ry="2" />
<text  x="14.15" y="639.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (17 samples, 0.11%)</title><rect x="213.0" y="629" width="1.3" height="15.0" fill="rgb(246,206,25)" rx="2" ry="2" />
<text  x="216.00" y="639.5" ></text>
</g>
<g >
<title>read_buf (5 samples, 0.03%)</title><rect x="61.9" y="69" width="0.4" height="15.0" fill="rgb(223,29,28)" rx="2" ry="2" />
<text  x="64.88" y="79.5" ></text>
</g>
<g >
<title>vtkXMLUnstructuredGridWriter::WriteAppendedPieceData (605 samples, 3.93%)</title><rect x="39.5" y="421" width="46.4" height="15.0" fill="rgb(226,6,24)" rx="2" ry="2" />
<text  x="42.50" y="431.5" >vtkX..</text>
</g>
<g >
<title>[unknown] (4 samples, 0.03%)</title><rect x="1064.7" y="597" width="0.3" height="15.0" fill="rgb(237,223,36)" rx="2" ry="2" />
<text  x="1067.70" y="607.5" ></text>
</g>
<g >
<title>gcm::TetrMeshSecondOrder::getTetr2@plt (5 samples, 0.03%)</title><rect x="322.1" y="597" width="0.3" height="15.0" fill="rgb(220,131,44)" rx="2" ry="2" />
<text  x="325.05" y="607.5" ></text>
</g>
<g >
<title>gcm::CalcNode::getRho (117 samples, 0.76%)</title><rect x="335.0" y="581" width="9.0" height="15.0" fill="rgb(240,123,16)" rx="2" ry="2" />
<text  x="338.00" y="591.5" ></text>
</g>
<g >
<title>gcm::RheologyMatrix::getU@plt (65 samples, 0.42%)</title><rect x="955.5" y="629" width="5.0" height="15.0" fill="rgb(229,25,13)" rx="2" ry="2" />
<text  x="958.50" y="639.5" ></text>
</g>
<g >
<title>vtkzlib_deflate (159 samples, 1.03%)</title><rect x="18.3" y="181" width="12.2" height="15.0" fill="rgb(228,54,30)" rx="2" ry="2" />
<text  x="21.28" y="191.5" ></text>
</g>
<g >
<title>gcm::Mesh::getNode (4 samples, 0.03%)</title><rect x="905.5" y="581" width="0.3" height="15.0" fill="rgb(230,9,1)" rx="2" ry="2" />
<text  x="908.46" y="591.5" ></text>
</g>
<g >
<title>gcm::Node::Node@plt (5 samples, 0.03%)</title><rect x="1132.4" y="565" width="0.4" height="15.0" fill="rgb(241,224,17)" rx="2" ry="2" />
<text  x="1135.45" y="575.5" ></text>
</g>
<g >
<title>gcm::CalcNode::setMaterialId@plt (5 samples, 0.03%)</title><rect x="344.3" y="581" width="0.4" height="15.0" fill="rgb(208,185,21)" rx="2" ry="2" />
<text  x="347.27" y="591.5" ></text>
</g>
<g >
<title>gcm::Body::~Body (2 samples, 0.01%)</title><rect x="1154.8" y="661" width="0.2" height="15.0" fill="rgb(247,37,19)" rx="2" ry="2" />
<text  x="1157.83" y="671.5" ></text>
</g>
<g >
<title>determinant (193 samples, 1.25%)</title><rect x="506.3" y="549" width="14.8" height="15.0" fill="rgb(246,167,28)" rx="2" ry="2" />
<text  x="509.28" y="559.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.02%)</title><rect x="1113.0" y="629" width="0.2" height="15.0" fill="rgb(238,183,5)" rx="2" ry="2" />
<text  x="1115.98" y="639.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::TypeList&lt;vtkBitArray, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::WriteBinaryDataBlockWorker&amp;&gt; (352 samples, 2.29%)</title><rect x="58.9" y="309" width="27.0" height="15.0" fill="rgb(242,122,35)" rx="2" ry="2" />
<text  x="61.89" y="319.5" >v..</text>
</g>
<g >
<title>gcm::CalcNode::setMaterialId (29 samples, 0.19%)</title><rect x="874.0" y="565" width="2.2" height="15.0" fill="rgb(210,208,39)" rx="2" ry="2" />
<text  x="876.96" y="575.5" ></text>
</g>
<g >
<title>gcm::gcm_matrix::get (16 samples, 0.10%)</title><rect x="937.6" y="597" width="1.2" height="15.0" fill="rgb(243,169,40)" rx="2" ry="2" />
<text  x="940.57" y="607.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (3 samples, 0.02%)</title><rect x="148.9" y="421" width="0.3" height="15.0" fill="rgb(241,166,44)" rx="2" ry="2" />
<text  x="151.94" y="431.5" ></text>
</g>
<g >
<title>vtkUnstructuredGrid::GetCellTypes (7 samples, 0.05%)</title><rect x="39.0" y="437" width="0.5" height="15.0" fill="rgb(211,209,23)" rx="2" ry="2" />
<text  x="41.97" y="447.5" ></text>
</g>
<g >
<title>vtkArrayDispatch::impl::Dispatch&lt;vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;double&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;float&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;short&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;signed char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned char&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned int&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned long long&gt;, vtkTypeList::TypeList&lt;vtkAOSDataArrayTemplate&lt;unsigned short&gt;, vtkTypeList::NullType&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::Execute&lt;(anonymous namespace)::ScalarRangeDispatchWrapper&amp;&gt; (13 samples, 0.08%)</title><rect x="39.5" y="277" width="1.0" height="15.0" fill="rgb(238,20,2)" rx="2" ry="2" />
<text  x="42.50" y="287.5" ></text>
</g>
<g >
<title>gcm::TetrMeshFirstOrder::isInnerPoint (6 samples, 0.04%)</title><rect x="34.8" y="613" width="0.4" height="15.0" fill="rgb(224,68,50)" rx="2" ry="2" />
<text  x="37.75" y="623.5" ></text>
</g>
</g>
</svg>
